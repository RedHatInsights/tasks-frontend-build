{"version":3,"file":"js/CompletedTaskDetails.7fbbd023bbfea2eedfdd.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/info-circle-icon.js","webpack:///./src/PresentationalComponents/SplitMessages/SplitMessages.js","webpack:///./src/SmartComponents/CompletedTaskDetails/Columns.js","webpack:///./src/SmartComponents/CompletedTaskDetails/Filters.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/SmartComponents/CompletedTaskDetails/TaskEntries.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/EntryRow.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/EntryRowLabel.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/EntryDetails.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/jobResultsDetailsHelpers.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/ExpandedIssues.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/JobResultsDetails.js","webpack:///./src/SmartComponents/CompletedTaskDetails/ParameterDetails.js","webpack:///./src/SmartComponents/CompletedTaskDetails/CompletedTaskDetails.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.InfoCircleIconConfig = {\n  name: 'InfoCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InfoCircleIcon = require('../createIcon').createIcon(exports.InfoCircleIconConfig);\nexports[\"default\"] = exports.InfoCircleIcon;","import React from 'react';\nimport { Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\n\nconst SplitMessages = ({ alert, content }) => {\n  return (\n    <Split>\n      {alert ? (\n        <React.Fragment>\n          <SplitItem style={{ paddingRight: '8px' }}>\n            <ExclamationCircleIcon color=\"#C9190B\" />\n          </SplitItem>\n          <SplitItem style={{ paddingRight: '16px' }}>\n            <span style={{ color: '#C9190B' }}>Alert</span>\n          </SplitItem>\n        </React.Fragment>\n      ) : null}\n      <SplitItem color=\"#A30000\">{content}</SplitItem>\n    </Split>\n  );\n};\n\nSplitMessages.propTypes = {\n  alert: propTypes.bool,\n  content: propTypes.oneOfType([propTypes.string, propTypes.object]),\n};\n\nexport default SplitMessages;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { renderColumnComponent } from '../../Utilities/helpers';\nimport SplitMessages from '../../PresentationalComponents/SplitMessages/SplitMessages';\nimport { createSystemLink } from '../../helpers';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst SystemNameCell = ({ system, display_name }, index) => {\n  const chrome = useChrome();\n\n  if (display_name) {\n    return createSystemLink(\n      system,\n      display_name,\n      `system-title-${index}`,\n      chrome?.isBeta?.()\n    );\n  } else {\n    return <span style={{ color: '#72767B' }}>System deleted</span>;\n  }\n};\n\nSystemNameCell.propTypes = {\n  system: propTypes.string,\n  display_name: propTypes.node,\n};\n\nexport const SystemColumn = {\n  title: 'System name',\n  props: {\n    width: 30,\n  },\n  sortByProp: 'display_name',\n  renderExport: (job) => job.display_name || 'System deleted',\n  renderFunc: renderColumnComponent(SystemNameCell),\n};\n\nexport const StatusColumn = {\n  title: 'Status',\n  props: {\n    width: 10,\n  },\n  sortByProp: 'status',\n  renderExport: (job) => job.status,\n};\n\nexport const MessageColumn = {\n  title: 'Message',\n  props: {\n    width: 35,\n  },\n  sortByFunction: (job) => job.results.message,\n  renderExport: (job) => job.results.message,\n  renderFunc: (_, _empty, job) => (\n    <SplitMessages\n      content={job.results.message}\n      alert={\n        job.results.alert ||\n        job.status === 'Failure' ||\n        job.status === 'Timeout'\n      }\n    />\n  ),\n};\n\nexport const exportableColumns = [SystemColumn, StatusColumn, MessageColumn];\nexport const conversionColumns = [SystemColumn, MessageColumn];\n\nexport default [SystemColumn, StatusColumn, MessageColumn];\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const systemFilter = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (jobs, value) =>\n      jobs.filter((job) =>\n        job.display_name\n          ? job.display_name.toLowerCase().includes(value.toLowerCase())\n          : null\n      ),\n  },\n];\n\nexport const statusFilters = [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Status',\n    filter: (jobs, value) =>\n      jobs.filter((job) => value.includes(job.status.toLowerCase())),\n    items: [\n      { label: 'Running', value: 'running' },\n      { label: 'Success', value: 'success' },\n      { label: 'Failure', value: 'failure' },\n      { label: 'Timeout', value: 'timeout' },\n    ],\n  },\n];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { BreadcrumbItem } from '@patternfly/react-core';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink';\n\nconst RouterLink = ({ href, ...props }) => {\n  return <InsightsLink {...props} to={href} />;\n};\n\nRouterLink.propTypes = {\n  href: propTypes.string,\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n  <BreadcrumbItem {...props} component={RouterLink}>\n    {children}\n  </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n  children: propTypes.node,\n};\n\nexport default BreadcrumbLinkItem;\n","import {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\n\nconst converttorhelconversionSeverityMap = {\n  error: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  overridable: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  skip: {\n    text: 'Skipped',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 1500,\n  },\n  warning: {\n    text: 'Warning',\n    icon: <ExclamationTriangleIcon color=\"#F0AB00\" />,\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon color=\"#2B9AF3\" />,\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\n// constant to be removed\nconst converttorhelconversionstageSeverityMap = {\n  error: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  overridable: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  skip: {\n    text: 'Skipped',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 1500,\n  },\n  warning: {\n    text: 'Warning',\n    icon: <ExclamationTriangleIcon color=\"#F0AB00\" />,\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon color=\"#2B9AF3\" />,\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\nconst converttorhelpreanalysisSeverityMap = {\n  error: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  overridable: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  skip: {\n    text: 'Skipped',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 1500,\n  },\n  warning: {\n    text: 'Warning',\n    icon: <ExclamationTriangleIcon color=\"#F0AB00\" />,\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon color=\"#2B9AF3\" />,\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\n// constant to be removed\nconst converttorhelpreanalysisstageSeverityMap = {\n  error: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  overridable: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  skip: {\n    text: 'Skipped',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 1500,\n  },\n  warning: {\n    text: 'Warning',\n    icon: <ExclamationTriangleIcon color=\"#F0AB00\" />,\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon color=\"#2B9AF3\" />,\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\nconst leapppreupgradeSeverityMap = {\n  high: {\n    text: 'High risk',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  medium: {\n    text: 'Medium risk',\n    icon: <ExclamationTriangleIcon color=\"#F0AB00\" />,\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1500,\n  },\n  low: {\n    text: 'Low risk',\n    icon: <ExclamationTriangleIcon color=\"#F0AB00\" />,\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon color=\"#2B9AF3\" />,\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\nconst leappupgradeSeverityMap = {\n  high: {\n    text: 'High risk',\n    icon: <ExclamationCircleIcon color=\"#C9190B\" />,\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  medium: {\n    text: 'Medium risk',\n    icon: <ExclamationTriangleIcon color=\"#F0AB00\" />,\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1500,\n  },\n  low: {\n    text: 'Low risk',\n    icon: <ExclamationTriangleIcon color=\"#F0AB00\" />,\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon color=\"#2B9AF3\" />,\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\n// constants to be removed\nconst leappupgradestageSeverityMap = leappupgradeSeverityMap;\nconst leappupgradescriptstageSeverityMap = leappupgradeSeverityMap;\nconst leapppreupgradescriptstageSeverityMap = leapppreupgradeSeverityMap;\n\nexport default {\n  converttorhelconversionSeverityMap,\n  converttorhelconversionstageSeverityMap,\n  converttorhelpreanalysisSeverityMap,\n  converttorhelpreanalysisstageSeverityMap,\n  leapppreupgradeSeverityMap,\n  leapppreupgradescriptstageSeverityMap,\n  leappupgradeSeverityMap,\n  leappupgradescriptstageSeverityMap,\n  leappupgradestageSeverityMap,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport severityMap from '../TaskEntries';\n\nconst EntryRow = ({ severity, taskConstantMapper, title }) => {\n  const renderIcon = () => {\n    return (\n      <span style={{ marginRight: '8px' }}>\n        {severityMap[taskConstantMapper][severity.toLowerCase()]['icon']}\n      </span>\n    );\n  };\n\n  const renderTitle = () => {\n    return (\n      <span\n        style={{\n          color:\n            severityMap[taskConstantMapper][severity.toLowerCase()][\n              'titleColor'\n            ],\n        }}\n      >\n        <strong>{title}</strong>\n      </span>\n    );\n  };\n\n  return (\n    <span>\n      {renderIcon()}\n      {renderTitle()}\n    </span>\n  );\n};\n\nEntryRow.propTypes = {\n  severity: propTypes.string,\n  taskConstantMapper: propTypes.string,\n  title: propTypes.string,\n};\n\nexport default EntryRow;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\n\nconst EntryRowLabel = ({ color, icon, text }) => {\n  return (\n    <Label\n      color={color}\n      icon={icon}\n      style={{ marginTop: '16px', marginBottom: '4px' }}\n      className=\"pf-m-compact\"\n    >\n      {text}\n    </Label>\n  );\n};\n\nEntryRowLabel.propTypes = {\n  color: propTypes.string,\n  icon: propTypes.any,\n  text: propTypes.string,\n};\n\nexport default EntryRowLabel;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport EntryRowLabel from './EntryRowLabel';\nimport severityMap from '../TaskEntries';\n\nconst EntryDetails = ({ entry, taskConstantMapper }) => {\n  const { detail, key, severity, summary, title } = entry;\n\n  const getLabelType = () => {\n    return (\n      <EntryRowLabel\n        color={\n          severityMap[taskConstantMapper][severity.toLowerCase()][\n            'severityColor'\n          ]\n        }\n        icon={severityMap[taskConstantMapper][severity.toLowerCase()]['icon']}\n        text={severityMap[taskConstantMapper][severity.toLowerCase()]['text']}\n      />\n    );\n  };\n\n  const renderResolutionDetails = (content, type, classname) => {\n    return content.map((item, index) => {\n      let key = `${type}-${index}`;\n      return (\n        <div key={key}>\n          {index > 0 ? (\n            <span>\n              <br />\n            </span>\n          ) : null}\n          <span className={classname}>\n            {item.type ? `[${item.type}] ${item.context}` : `${item.context}`}\n          </span>\n        </div>\n      );\n    });\n  };\n\n  const createGrid = (itemOneContent, itemTwoContent) => {\n    return (\n      <Grid hasGutter className=\"entry-detail-title\">\n        <GridItem span={2} className=\"entry-detail-content\">\n          {itemOneContent}\n        </GridItem>\n        <GridItem\n          xl2={5}\n          xl={5}\n          l={6}\n          m={7}\n          sm={8}\n          style={{ whiteSpace: 'pre-line' }}\n        >\n          {typeof itemTwoContent === 'function'\n            ? itemTwoContent()\n            : itemTwoContent}\n        </GridItem>\n      </Grid>\n    );\n  };\n\n  const renderDetails = () => {\n    return (\n      <React.Fragment>\n        {createGrid('Summary', summary)}\n        {detail?.diagnosis && detail?.diagnosis?.[0]?.context !== ''\n          ? createGrid(\n              'Diagnosis',\n              renderResolutionDetails(detail.diagnosis, 'diagnosis')\n            )\n          : null}\n        {detail?.remediations && detail?.remediations?.[0]?.context !== ''\n          ? createGrid(\n              'Remediation',\n              renderResolutionDetails(\n                detail.remediations,\n                'remediations',\n                'remediations-font-family'\n              )\n            )\n          : null}\n        {createGrid('Key', key)}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <div>{getLabelType()}</div>\n      <div className=\"entry-title\">{title}</div>\n      <div>{renderDetails()}</div>\n    </React.Fragment>\n  );\n};\n\nEntryDetails.propTypes = {\n  entry: propTypes.object,\n  taskConstantMapper: propTypes.string,\n};\n\nexport default EntryDetails;\n","import React from 'react';\nimport EntryRow from './EntryRow';\nimport EntryDetails from './EntryDetails';\nimport severityMap from '../TaskEntries';\n\nconst sortBySeverity = (entries, taskConstantMapper) => {\n  let sortedEntries = entries.sort((a, b) => {\n    let aSeverity =\n      severityMap[taskConstantMapper][a.severity.toLowerCase()].severityLevel;\n    let bSeverity =\n      severityMap[taskConstantMapper][b.severity.toLowerCase()].severityLevel;\n    if (aSeverity > bSeverity) {\n      return -1;\n    }\n\n    if (bSeverity > aSeverity) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  return sortedEntries;\n};\n\nexport const buildResultsRows = (entries, isReportJson, taskSlug) => {\n  let taskConstantMapper = taskSlug.toLowerCase().replace(/-/g, '');\n  let rows = [];\n  let sortedEntries;\n  if (isReportJson) {\n    sortedEntries = sortBySeverity(entries, `${taskConstantMapper}SeverityMap`);\n    sortedEntries.forEach((entry) => {\n      rows.push({\n        parent: (\n          <EntryRow\n            severity={entry.severity}\n            title={entry.title}\n            taskConstantMapper={`${taskConstantMapper}SeverityMap`}\n          />\n        ),\n        child: (\n          <EntryDetails\n            entry={entry}\n            taskConstantMapper={`${taskConstantMapper}SeverityMap`}\n          />\n        ),\n      });\n    });\n  } else {\n    sortedEntries = entries;\n    rows = sortedEntries[0];\n  }\n\n  return rows;\n};\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Tr, Td } from '@patternfly/react-table';\nimport { CodeBlock, CodeBlockCode } from '@patternfly/react-core';\nimport { c_code_block__header_BorderBottomColor } from '@patternfly/react-tokens';\nimport { global_palette_white } from '@patternfly/react-tokens';\n\nconst ExpandedIssues = ({ rowPairs, isReportJson }) => {\n  let rowIndex = 0;\n\n  const [expanded, setExpanded] = useState(\n    Object.fromEntries(\n      Object.entries(rowPairs).map(([k]) => [k, Boolean(false)])\n    )\n  );\n\n  const handleExpansionToggle = (event, pairIndex) => {\n    setExpanded({\n      ...expanded,\n      [pairIndex]: !expanded[pairIndex],\n    });\n  };\n\n  const renderParentRow = (parent, pairIndex) => {\n    let parentRow = (\n      <Tr key={rowIndex}>\n        <Td\n          expand={{\n            rowIndex: pairIndex,\n            isExpanded: expanded[pairIndex],\n            onToggle: handleExpansionToggle,\n          }}\n        />\n        <Td>{parent}</Td>\n      </Tr>\n    );\n\n    rowIndex += 1;\n    return parentRow;\n  };\n\n  const renderChildRow = (child, pairIndex) => {\n    let childRow = (\n      <Tr\n        className={expanded[pairIndex] === true ? 'pf-m-expanded' : null}\n        key={rowIndex}\n        isExpanded={expanded[pairIndex] === true}\n      >\n        <Td />\n        <Td>{child}</Td>\n      </Tr>\n    );\n\n    rowIndex += 1;\n    return childRow;\n  };\n\n  const renderRows = () => {\n    if (isReportJson) {\n      return rowPairs.map((row, pairIndex) => {\n        return (\n          <React.Fragment key={pairIndex}>\n            {renderParentRow(row.parent, pairIndex)}\n            {renderChildRow(row.child, pairIndex)}\n          </React.Fragment>\n        );\n      });\n    } else\n      return (\n        <CodeBlock\n          style={{\n            [c_code_block__header_BorderBottomColor.name]: global_palette_white,\n            backgroundColor: '#ffffff',\n          }}\n        >\n          <CodeBlockCode>\n            {typeof rowPairs === 'object' &&\n            rowPairs !== null &&\n            !Array.isArray(rowPairs)\n              ? JSON.stringify(rowPairs, null, 2)\n              : rowPairs}\n          </CodeBlockCode>\n        </CodeBlock>\n      );\n  };\n\n  return renderRows();\n};\n\nExpandedIssues.propTypes = {\n  isReportJson: propTypes.bool,\n  rowPairs: propTypes.array,\n};\n\nexport default ExpandedIssues;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TableComposable, Tbody } from '@patternfly/react-table';\nimport { buildResultsRows } from './jobResultsDetailsHelpers';\nimport ExpandedIssues from './ExpandedIssues';\n\nconst JobResultsDetails = ({ taskSlug, item }) => {\n  const isReportJson = item.results.report_json?.entries ? true : false;\n\n  const rowPairs = isReportJson\n    ? buildResultsRows(item.results.report_json.entries, isReportJson, taskSlug)\n    : buildResultsRows([item.results.report], isReportJson, taskSlug);\n\n  return (\n    <div>\n      <TableComposable\n        variant=\"compact\"\n        style={{\n          marginBottom: '30px',\n          '--pf-c-table__expandable-row--after--border-width--base': '0',\n        }}\n      >\n        <Tbody>\n          <ExpandedIssues rowPairs={rowPairs} isReportJson={isReportJson} />\n        </Tbody>\n      </TableComposable>\n    </div>\n  );\n};\n\nJobResultsDetails.propTypes = {\n  item: propTypes.object,\n  taskSlug: propTypes.string,\n};\n\nexport default JobResultsDetails;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Flex,\n  FlexItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\n\nconst ParameterDetails = ({ parameters }) => {\n  const parametersExist = parameters?.length ? true : false;\n\n  return (\n    parametersExist && (\n      <Flex>\n        <FlexItem>\n          <TextContent>\n            <Text component={TextVariants.h4}>Parameter details</Text>\n            {parameters.map((parameter) => (\n              <Text\n                key={`parameter-${parameter.key}`}\n                component={TextVariants.p}\n                className=\"pf-u-mb-sm\"\n              >\n                {parameter.key}: <b>{parameter.value}</b>\n              </Text>\n            ))}\n          </TextContent>\n        </FlexItem>\n      </Flex>\n    )\n  );\n};\n\nParameterDetails.propTypes = {\n  parameters: propTypes.array,\n};\n\nexport default ParameterDetails;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport TasksTables from '../../Utilities/hooks/useTableTools/Components/TasksTables';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  Flex,\n  FlexItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport columns, { conversionColumns, exportableColumns } from './Columns';\nimport { statusFilters, systemFilter } from './Filters';\nimport {\n  COMPLETED_INFO_PANEL,\n  COMPLETED_INFO_PANEL_FLEX_PROPS,\n  COMPLETED_INFO_BUTTONS,\n  COMPLETED_INFO_BUTTONS_FLEX_PROPS,\n  LOADING_INFO_PANEL,\n  LOADING_JOBS_TABLE,\n  TASK_ERROR,\n  TASKS_TABLE_DEFAULTS,\n} from '../../constants';\nimport FlexibleFlex from '../../PresentationalComponents/FlexibleFlex/FlexibleFlex';\nimport EmptyStateDisplay from '../../PresentationalComponents/EmptyStateDisplay/EmptyStateDisplay';\nimport RunTaskModal from '../RunTaskModal/RunTaskModal';\nimport DeleteCancelTaskModal from '../../PresentationalComponents/DeleteCancelTaskModal/DeleteCancelTaskModal';\nimport { emptyRows } from '../../PresentationalComponents/NoResultsTable/NoResultsTable';\nimport BreadcrumbLinkItem from '../../PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem';\nimport RefreshFooterContent from '../RefreshFooterContent';\nimport {\n  getSelectedSystems,\n  fetchTask,\n  fetchTaskJobs,\n  hasDetails,\n} from '../completedTaskDetailsHelpers';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport JobResultsDetails from './JobResultsDetails/JobResultsDetails';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate';\nimport ReactMarkdown from 'react-markdown';\nimport { useInterval } from '../../Utilities/hooks/useTableTools/useInterval';\nimport ParameterDetails from './ParameterDetails';\n\nconst CompletedTaskDetails = () => {\n  const { id } = useParams();\n  const [completedTaskDetails, setCompletedTaskDetails] =\n    useState(LOADING_INFO_PANEL);\n  const [completedTaskJobs, setCompletedTaskJobs] =\n    useState(LOADING_JOBS_TABLE);\n  const [tableLoading, setTableLoading] = useState(true);\n  const [error, setError] = useState();\n  const [runTaskModalOpened, setRunTaskModalOpened] = useState(false);\n  const [selectedSystems, setSelectedSystems] = useState([]);\n  const [isDeleteCancelModalOpened, setIsDeleteCancelModalOpened] =\n    useState(false);\n  const [isDelete, setIsDelete] = useState(false);\n  const [isCancel, setIsCancel] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState();\n  const [isRunning, setIsRunning] = useState(false);\n  const chrome = useChrome();\n  const { hasAccess, isLoading } = usePermissions('inventory', [\n    'inventory:hosts:*',\n    'inventory:hosts:read',\n  ]);\n  const navigate = useInsightsNavigate();\n\n  const fetchData = async () => {\n    setLastUpdated(` ${moment().format('dddd, MMMM Do YYYY, h:mm a')}`);\n    setTableLoading(true);\n    const fetchedTaskDetails = await fetchTask(id, setError);\n\n    if (Object.keys(fetchedTaskDetails).length) {\n      const fetchedTaskJobs = await fetchTaskJobs(fetchedTaskDetails, setError);\n\n      if (fetchedTaskJobs.length) {\n        if (fetchedTaskJobs.some((job) => job.status === 'Running')) {\n          setIsRunning(true);\n        } else {\n          setIsRunning(false);\n        }\n        await setCompletedTaskDetails(fetchedTaskDetails);\n        await setCompletedTaskJobs(fetchedTaskJobs);\n      }\n    }\n    setTableLoading(false);\n  };\n\n  useInterval(() => {\n    if (isRunning) {\n      fetchData();\n    }\n  }, 60000);\n\n  useEffect(() => {\n    fetchData();\n  }, [id]);\n\n  useEffect(() => {\n    completedTaskDetails &&\n      chrome.updateDocumentTitle(\n        `${completedTaskDetails.name} - Tasks | Red Hat Insights`\n      );\n  }, [chrome, completedTaskDetails]);\n\n  useEffect(() => {\n    setSelectedSystems(getSelectedSystems(completedTaskJobs));\n  }, [completedTaskJobs]);\n\n  useEffect(() => {\n    if (isDelete) {\n      navigate('/executed');\n      setIsDelete(false);\n    }\n    // Not currently being used, but may be used later\n    /*if (isCancel) {\n      fetchData();\n      setIsCancel(false);\n    }*/\n  }, [isCancel, isDelete]);\n\n  const JobResultsRow = useMemo(\n    () =>\n      function Row(props) {\n        return (\n          <JobResultsDetails\n            taskSlug={completedTaskDetails.task_slug}\n            {...props}\n          />\n        );\n      },\n    [completedTaskJobs]\n  );\n\n  const isConversionTask = () => {\n    if (\n      completedTaskDetails.task_slug === 'convert-to-rhel-conversion-stage' ||\n      completedTaskDetails.task_slug === 'convert-to-rhel-conversion'\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const buildFilterConfig = () => {\n    if (isConversionTask()) {\n      return { filterConfig: [...systemFilter] };\n    } else {\n      return { filterConfig: [...systemFilter, ...statusFilters] };\n    }\n  };\n\n  return (\n    <div>\n      {runTaskModalOpened && (\n        <RunTaskModal\n          description={completedTaskDetails.task_description}\n          error={error}\n          isOpen={runTaskModalOpened}\n          parameters={completedTaskDetails.parameters}\n          selectedSystems={selectedSystems}\n          setModalOpened={setRunTaskModalOpened}\n          slug={completedTaskDetails.task_slug}\n          title={completedTaskDetails.name}\n          name={completedTaskDetails.name}\n        />\n      )}\n      <DeleteCancelTaskModal\n        id={completedTaskDetails.id}\n        isOpen={isDeleteCancelModalOpened}\n        setIsCancel={setIsCancel}\n        setIsDelete={setIsDelete}\n        setModalOpened={setIsDeleteCancelModalOpened}\n        startTime={completedTaskDetails.start_time}\n        status={completedTaskDetails.status}\n        title={completedTaskDetails.name}\n      />\n      {error ? (\n        <EmptyStateDisplay\n          icon={ExclamationCircleIcon}\n          color=\"#c9190b\"\n          title={'Task cannot be displayed'}\n          text={TASK_ERROR}\n          error={`Error ${error?.response?.status}: ${error?.message}`}\n        />\n      ) : (\n        <React.Fragment>\n          <PageHeader>\n            <Breadcrumb ouiaId=\"completed-tasks-details-breadcrumb\">\n              <BreadcrumbLinkItem to=\"/executed\">Tasks</BreadcrumbLinkItem>\n              <BreadcrumbItem isActive>\n                {completedTaskDetails.name}\n              </BreadcrumbItem>\n            </Breadcrumb>\n            <Flex direction={{ default: 'column', md: 'row' }}>\n              <Flex\n                direction={{ default: 'column' }}\n                flex={{ default: 'flex_1' }}\n              >\n                <FlexItem>\n                  <PageHeaderTitle title={completedTaskDetails.name} />\n                  <TextContent>\n                    <Text component={TextVariants.small}>\n                      {completedTaskDetails.task_title}\n                    </Text>\n                  </TextContent>\n                </FlexItem>\n                <FlexItem>\n                  <ReactMarkdown>\n                    {completedTaskDetails.task_description}\n                  </ReactMarkdown>\n                </FlexItem>\n                <ParameterDetails\n                  parameters={completedTaskDetails.parameters}\n                />\n              </Flex>\n              <FlexibleFlex\n                data={completedTaskDetails}\n                flexContents={COMPLETED_INFO_BUTTONS(\n                  completedTaskDetails.task_slug,\n                  setRunTaskModalOpened,\n                  completedTaskDetails.status,\n                  setIsDeleteCancelModalOpened\n                )}\n                flexProps={COMPLETED_INFO_BUTTONS_FLEX_PROPS}\n              />\n            </Flex>\n          </PageHeader>\n          <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n            <Card>\n              <Flex\n                className=\"completed-task-details-info-border\"\n                justifyContent={{ default: 'justifyContentSpaceBetween' }}\n                direction={{ default: 'column', md: 'row' }}\n              >\n                <FlexibleFlex\n                  data={completedTaskDetails}\n                  flexContents={COMPLETED_INFO_PANEL}\n                  flexProps={COMPLETED_INFO_PANEL_FLEX_PROPS}\n                />\n              </Flex>\n            </Card>\n            <br />\n            <Card>\n              {!isLoading && hasAccess ? (\n                <TasksTables\n                  label={`${completedTaskDetails.id}-completed-jobs`}\n                  ouiaId={`${completedTaskDetails.id}-completed-jobs-table`}\n                  columns={isConversionTask() ? conversionColumns : columns}\n                  items={completedTaskJobs}\n                  filters={buildFilterConfig()}\n                  options={{\n                    ...TASKS_TABLE_DEFAULTS,\n                    exportable: {\n                      ...TASKS_TABLE_DEFAULTS.exportable,\n                      columns: isConversionTask()\n                        ? conversionColumns\n                        : exportableColumns,\n                    },\n                    detailsComponent: completedTaskJobs.some((job) =>\n                      hasDetails(job)\n                    )\n                      ? JobResultsRow\n                      : undefined,\n                  }}\n                  emptyRows={emptyRows('jobs')}\n                  isStickyHeader\n                  isTableLoading={tableLoading}\n                  footerContent={\n                    <RefreshFooterContent\n                      footerContent={lastUpdated}\n                      isRunning={isRunning}\n                      type=\"jobs\"\n                    />\n                  }\n                />\n              ) : (\n                <NotAuthorized serviceName=\"Inventory\" />\n              )}\n            </Card>\n          </section>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default CompletedTaskDetails;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","SplitMessages","alert","content","Split","SplitItem","style","paddingRight","color","propTypes","SystemNameCell","index","system","display_name","chrome","useChrome","createSystemLink","isBeta","SystemColumn","title","props","sortByProp","renderExport","job","renderFunc","renderColumnComponent","StatusColumn","status","MessageColumn","sortByFunction","results","message","_","_empty","exportableColumns","conversionColumns","systemFilter","type","conditionalFilterType","label","filter","jobs","value","toLowerCase","includes","statusFilters","items","RouterLink","href","InsightsLink","to","BreadcrumbLinkItem","children","BreadcrumbItem","component","converttorhelconversionSeverityMap","error","text","icon","titleColor","severityColor","severityLevel","overridable","skip","warning","info","converttorhelconversionstageSeverityMap","converttorhelpreanalysisSeverityMap","converttorhelpreanalysisstageSeverityMap","leapppreupgradeSeverityMap","high","medium","low","leappupgradeSeverityMap","leapppreupgradescriptstageSeverityMap","leappupgradescriptstageSeverityMap","leappupgradestageSeverityMap","EntryRow","severity","taskConstantMapper","marginRight","severityMap","EntryRowLabel","Label","marginTop","marginBottom","className","EntryDetails","entry","detail","key","summary","renderResolutionDetails","classname","map","item","context","createGrid","itemOneContent","itemTwoContent","Grid","hasGutter","GridItem","span","xl2","xl","l","m","sm","whiteSpace","diagnosis","remediations","ExpandedIssues","rowPairs","isReportJson","rowIndex","useState","Object","fromEntries","entries","Boolean","expanded","setExpanded","handleExpansionToggle","event","pairIndex","row","parent","parentRow","Tr","Td","expand","isExpanded","onToggle","renderParentRow","child","childRow","renderChildRow","CodeBlock","c_code_block__header_BorderBottomColor","global_palette_white","CodeBlockCode","Array","isArray","JSON","stringify","JobResultsDetails","taskSlug","report_json","replace","rows","sort","a","b","aSeverity","bSeverity","sortBySeverity","forEach","push","buildResultsRows","report","TableComposable","variant","Tbody","ParameterDetails","parameters","length","Flex","FlexItem","TextContent","Text","TextVariants","parameter","id","useParams","LOADING_INFO_PANEL","completedTaskDetails","setCompletedTaskDetails","LOADING_JOBS_TABLE","completedTaskJobs","setCompletedTaskJobs","tableLoading","setTableLoading","setError","runTaskModalOpened","setRunTaskModalOpened","selectedSystems","setSelectedSystems","isDeleteCancelModalOpened","setIsDeleteCancelModalOpened","isDelete","setIsDelete","isCancel","setIsCancel","lastUpdated","setLastUpdated","isRunning","setIsRunning","usePermissions","hasAccess","isLoading","navigate","useInsightsNavigate","fetchData","moment","format","fetchTask","fetchedTaskDetails","keys","fetchTaskJobs","fetchedTaskJobs","some","useInterval","useEffect","updateDocumentTitle","getSelectedSystems","JobResultsRow","useMemo","task_slug","isConversionTask","RunTaskModal","description","task_description","isOpen","setModalOpened","slug","DeleteCancelTaskModal","startTime","start_time","EmptyStateDisplay","ExclamationCircleIcon","TASK_ERROR","response","PageHeader","Breadcrumb","ouiaId","isActive","direction","default","md","flex","PageHeaderTitle","task_title","FlexibleFlex","data","flexContents","COMPLETED_INFO_BUTTONS","flexProps","COMPLETED_INFO_BUTTONS_FLEX_PROPS","Card","justifyContent","COMPLETED_INFO_PANEL","COMPLETED_INFO_PANEL_FLEX_PROPS","TasksTables","columns","filters","filterConfig","options","TASKS_TABLE_DEFAULTS","exportable","detailsComponent","hasDetails","undefined","emptyRows","isStickyHeader","isTableLoading","footerContent","RefreshFooterContent","NotAuthorized","serviceName"],"sourceRoot":""}