{"version":3,"file":"js/TasksPage.14be24efccdd3f5dbb68.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/arrow-right-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/check-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/in-progress-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/wrench-icon.js","webpack:///./src/PresentationalComponents/TasksTabs/TasksTabs.js","webpack:///./src/SmartComponents/AvailableTasks/QuickstartButton.js","webpack:///./src/Utilities/useFeatureFlag.js","webpack:///./src/SmartComponents/AvailableTasks/TaskCard.js","webpack:///./src/SmartComponents/AvailableTasks/AvailableTasksTable.js","webpack:///./src/SmartComponents/AvailableTasks/AvailableTasks.js","webpack:///./src/SmartComponents/ActivityTable/Columns.js","webpack:///./src/SmartComponents/ActivityTable/Filters.js","webpack:///./src/SmartComponents/ActivityTable/ActivityTable.js","webpack:///./src/SmartComponents/ActivityTable/hooks/useActionResolvers.js","webpack:///./src/SmartComponents/TasksPage/TasksPage.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ArrowRightIconConfig = {\n  name: 'ArrowRightIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ArrowRightIcon = require('../createIcon').createIcon(exports.ArrowRightIconConfig);\nexports[\"default\"] = exports.ArrowRightIcon;","\"use strict\"\nexports.__esModule = true;\nexports.CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CheckCircleIcon = require('../createIcon').createIcon(exports.CheckCircleIconConfig);\nexports[\"default\"] = exports.CheckCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.InProgressIconConfig = {\n  name: 'InProgressIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M513.417211,16.013668 L513.417211,112.013668 C513.406007,120.539653 520.082422,127.576718 528.597211,128.013668 C732.697211,136.513668 896.147211,305.013668 896.147211,511.343668 C896.147211,723.013668 724.007211,895.163668 512.417211,895.163668 C437.186239,895.277345 363.602574,873.135095 300.927211,831.523668 C294.58293,827.2982 286.138663,828.135095 280.747211,833.523668 L211.807211,902.353668 C208.502935,905.676185 206.82123,910.280199 207.20607,914.950237 C207.590911,919.620275 210.00361,923.886884 213.807211,926.623668 C300.709573,989.398037 405.213535,1023.13146 512.417211,1023.01398 C794.537211,1023.01398 1023.91724,793.433668 1023.91724,511.413668 C1024.00721,235.103668 804.007211,9.22366802 529.897211,0.00645736761 C525.571205,-0.116171039 521.377128,1.51204372 518.271915,4.52681369 C515.166702,7.54158367 513.415263,11.6857144 513.417211,16.013668 M97.1272107,212.923668 C64.2190689,258.479443 39.0698895,309.162997 22.6972107,362.923668 C21.2705092,367.756559 22.2039184,372.979173 25.2163356,377.018685 C28.2287528,381.058197 32.9681443,383.442545 38.0072107,383.453683 L139.407211,383.453683 C145.970195,383.46249 151.873012,379.462528 154.297211,373.363668 C164.307669,347.593304 177.068112,322.977652 192.357211,299.943668 C196.579666,293.633658 195.741339,285.216847 190.357211,279.863668 L121.497211,211.013668 C118.186635,207.662531 113.567544,205.940538 108.871166,206.30669 C104.174788,206.672841 99.8783994,209.089927 97.1272107,212.913668 M112.907211,511.433663 L17.0072107,511.433663 C12.679257,511.433663 8.5351263,513.183159 5.52035633,516.288373 C2.50558635,519.393586 0.877371594,523.587662 1.00721065,527.913668 C4.13104542,629.408217 37.6085847,727.635936 97.1172107,809.913668 C99.8539943,813.717268 104.120603,816.129968 108.790642,816.514809 C113.46068,816.899649 118.064693,815.217944 121.387211,811.913668 L190.217211,743.073668 C195.605784,737.682216 196.442679,729.237949 192.217211,722.893668 C153.520825,664.580171 131.611534,596.745437 128.887211,526.813668 C128.553964,518.220138 121.487197,511.427209 112.887211,511.433663',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InProgressIcon = require('../createIcon').createIcon(exports.InProgressIconConfig);\nexports[\"default\"] = exports.InProgressIcon;","\"use strict\"\nexports.__esModule = true;\nexports.WrenchIconConfig = {\n  name: 'WrenchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.WrenchIcon = require('../createIcon').createIcon(exports.WrenchIconConfig);\nexports[\"default\"] = exports.WrenchIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Tabs, Tab, TabTitleText } from '@patternfly/react-core';\n\nconst TasksTabs = ({ className, tabIndex, tabsList, updateTab }) => {\n  return (\n    <Tabs className={className} activeKey={tabIndex} onSelect={updateTab}>\n      {tabsList.map((tabName, index) => (\n        <Tab\n          id={`tabs-page-${index}`}\n          key={`tabs-page-${index}`}\n          eventKey={index}\n          title={<TabTitleText>{tabName}</TabTitleText>}\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nTasksTabs.propTypes = {\n  className: PropTypes.string,\n  tabIndex: PropTypes.number,\n  tabsList: PropTypes.array,\n  updateTab: PropTypes.func,\n};\n\nexport default TasksTabs;\n","import React from 'react';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { Button } from '@patternfly/react-core';\nimport { ArrowRightIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\n\nexport const SLUG_TO_QUICKSTART = {\n  'convert-to-rhel-preanalysis-stage': 'pre-conversion-quickstart',\n  'convert-to-rhel-preanalysis': 'pre-conversion-quickstart',\n  'convert-to-rhel-conversion-stage': 'conversion-quickstart',\n  'convert-to-rhel-conversion': 'conversion-quickstart',\n  'leapp-preupgrade-stage': 'leapp-quickstart',\n  'leapp-preupgrade': 'leapp-quickstart',\n};\n\nexport const QUICKSTART_TO_FEATURE_FLAG = {\n  'pre-conversion-quickstart':\n    'tasks-frontend_pre-conversion-quickstart-active',\n  'conversion-quickstart': 'tasks-frontend_conversion-quickstart-active',\n  'leapp-quickstart': 'tasks-frontend_leapp-quickstart-active',\n};\n\nconst QuickstartButton = ({ slug }) => {\n  const quickstartName = SLUG_TO_QUICKSTART[slug];\n  const featureFlagName = QUICKSTART_TO_FEATURE_FLAG[quickstartName];\n\n  const { quickStarts } = useChrome();\n  const enabled =\n    featureFlagName !== undefined ? useFeatureFlag(featureFlagName) : true;\n\n  return enabled ? (\n    <Button\n      variant=\"link\"\n      icon={<ArrowRightIcon />}\n      iconPosition=\"end\"\n      onClick={() => quickStarts.activateQuickstart(quickstartName)}\n    >\n      Help me get started\n    </Button>\n  ) : null;\n};\n\nQuickstartButton.propTypes = {\n  slug: propTypes.string.isRequired,\n};\n\nexport { QuickstartButton };\n","import { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport default (flag) => {\n  const { flagsReady } = useFlagsStatus();\n  const isFlagEnabled = useFlag(flag);\n  return flagsReady ? isFlagEnabled : false;\n};\n","import {\n  Card,\n  CardBody,\n  CardExpandableContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Flex,\n  FlexItem,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {\n  AVAILABLE_TASKS_ROOT,\n  CONVERSION_SLUG,\n  TASKS_API_ROOT,\n} from '../../constants';\nimport RunTaskButton from '../../PresentationalComponents/RunTaskButton/RunTaskButton';\nimport { QuickstartButton, SLUG_TO_QUICKSTART } from './QuickstartButton';\nimport PropTypes from 'prop-types';\n\nconst scriptOrPlaybook = (slug) => {\n  return slug.includes(CONVERSION_SLUG) ? 'script' : 'playbook';\n};\n\nconst TaskCard = ({ task, openTaskModal }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <div aria-label={task.title} key={task.title}>\n      <Card isExpanded={isExpanded}>\n        <CardHeader\n          onExpand={() => setIsExpanded(!isExpanded)}\n          toggleButtonProps={{\n            'data-ouia-component-id': `Expand ${task.title} description`,\n            'aria-label': `Expand ${task.title} description`,\n            'aria-expanded': isExpanded,\n          }}\n        >\n          <CardTitle>{task.title}</CardTitle>\n        </CardHeader>\n        <CardExpandableContent>\n          <CardBody className=\"card-task-description\">\n            <Flex direction={{ default: 'column' }}>\n              <FlexItem>\n                <ReactMarkdown>{task.description}</ReactMarkdown>\n              </FlexItem>\n              <FlexItem>\n                <a\n                  href={`${TASKS_API_ROOT}${AVAILABLE_TASKS_ROOT}/${task.slug}/playbook`}\n                >\n                  {`Download preview of ${scriptOrPlaybook(task.slug)}`}\n                </a>\n              </FlexItem>\n            </Flex>\n          </CardBody>\n        </CardExpandableContent>\n        <CardFooter>\n          <Flex>\n            <RunTaskButton\n              slug={task.slug}\n              isFirst\n              variant=\"primary\"\n              openTaskModal={openTaskModal}\n            />\n            {Object.keys(SLUG_TO_QUICKSTART).includes(task.slug) && (\n              <QuickstartButton slug={task.slug} />\n            )}\n          </Flex>\n        </CardFooter>\n      </Card>\n      <br />\n    </div>\n  );\n};\n\nTaskCard.propTypes = {\n  task: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  openTaskModal: PropTypes.func.isRequired,\n};\n\nexport { TaskCard };\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport EmptyStateDisplay from '../../PresentationalComponents/EmptyStateDisplay/EmptyStateDisplay';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport {\n  EMPTY_TASKS_MESSAGE,\n  EMPTY_TASKS_TITLE,\n  TASKS_ERROR,\n} from '../../constants';\nimport { TaskCard } from './TaskCard';\n\nconst AvailableTasksTable = ({ availableTasks, error, openTaskModal }) => {\n  return (\n    <div aria-label=\"available-tasks-table\">\n      {error ? (\n        <EmptyStateDisplay\n          icon={ExclamationCircleIcon}\n          color=\"#c9190b\"\n          title={'Available tasks cannot be displayed'}\n          text={TASKS_ERROR}\n          error={`Error ${error?.response?.status}: ${error?.message}`}\n        />\n      ) : !availableTasks?.length ? (\n        <EmptyStateDisplay\n          title={EMPTY_TASKS_TITLE}\n          text={EMPTY_TASKS_MESSAGE}\n        />\n      ) : (\n        availableTasks?.map((task, index) => (\n          <TaskCard task={task} key={index} openTaskModal={openTaskModal} />\n        ))\n      )}\n    </div>\n  );\n};\n\nAvailableTasksTable.propTypes = {\n  availableTasks: propTypes.array,\n  error: propTypes.object,\n  openTaskModal: propTypes.func,\n};\n\nexport default AvailableTasksTable;\n","import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { fetchAvailableTasks } from '../../../api';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport AvailableTasksTable from './AvailableTasksTable';\nimport { dispatchNotification } from '../../Utilities/Dispatcher';\nimport { isError } from '../completedTaskDetailsHelpers';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { Card, CardBody, CardFooter, CardTitle } from '@patternfly/react-core';\n\nexport const LoadingTasks = () => {\n  return Array.from({ length: 3 }).map((task, index) => (\n    <React.Fragment key={index}>\n      <Card key={`loading-${index}`}>\n        <CardTitle>\n          <Skeleton size={SkeletonSize.md} />\n        </CardTitle>\n        <CardBody>\n          <Skeleton size={SkeletonSize.md} />\n        </CardBody>\n        <CardFooter>\n          <Skeleton size={SkeletonSize.md} />\n        </CardFooter>\n      </Card>\n      <br />\n    </React.Fragment>\n  ));\n};\n\nconst AvailableTasks = ({ openTaskModal }) => {\n  const [availableTasks, setAvailableTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const chrome = useChrome();\n\n  const setTasks = (result) => {\n    if (isError(result)) {\n      setError(result);\n      dispatchNotification({\n        variant: 'danger',\n        title: 'Error',\n        description: result.message,\n        dismissable: true,\n        autoDismiss: false,\n      });\n    } else {\n      setAvailableTasks(result.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const taskLimit = '?limit=50&offset=0'; // temp workaround for tasks list > 10, eg in stage\n      const result = await fetchAvailableTasks(taskLimit);\n\n      setTasks(result);\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    chrome.updateDocumentTitle('Tasks | Red Hat Insights');\n  }, [chrome]);\n\n  return (\n    <div aria-label=\"available-tasks\">\n      {isLoading ? (\n        <LoadingTasks />\n      ) : (\n        <AvailableTasksTable\n          availableTasks={availableTasks}\n          error={error}\n          openTaskModal={openTaskModal}\n        />\n      )}\n    </div>\n  );\n};\n\nAvailableTasks.propTypes = {\n  openTaskModal: propTypes.func,\n};\n\nexport default AvailableTasks;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { renderColumnComponent } from '../../Utilities/helpers';\nimport { Icon } from '@patternfly/react-core';\nimport { CheckCircleIcon, InProgressIcon } from '@patternfly/react-icons';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink';\n\nconst TaskNameCell = ({ id, name }, index) => (\n  <InsightsLink key={`task-name-${index}`} to={`/executed/${id}`}>\n    {name}\n  </InsightsLink>\n);\n\nTaskNameCell.propTypes = {\n  id: propTypes.number,\n  name: propTypes.any,\n  index: propTypes.number,\n};\n\nconst StatusCell = ({ status }) =>\n  ({\n    Completed: (\n      <span style={{ color: '#3E8635', display: 'flex', alignItems: 'center' }}>\n        <Icon status=\"success\" style={{ marginRight: '4px' }}>\n          <CheckCircleIcon />\n        </Icon>\n        {status}\n      </span>\n    ),\n    Running: (\n      <span style={{ color: '#2B9AF3', display: 'flex', alignItems: 'center' }}>\n        <Icon status=\"info\" style={{ marginRight: '4px' }}>\n          <InProgressIcon />\n        </Icon>\n        {status}\n      </span>\n    ),\n  }[status] || status);\n\nStatusCell.propTypes = {\n  status: propTypes.oneOfType([propTypes.string, propTypes.object]),\n};\n\nexport const TaskColumn = {\n  title: 'Task',\n  props: {\n    width: 25,\n  },\n  sortByProp: 'name',\n  renderExport: (task) => task.name,\n  renderFunc: renderColumnComponent(TaskNameCell),\n};\n\nexport const SystemsCountColumn = {\n  title: 'Systems',\n  props: {\n    width: 10,\n  },\n  sortByProp: 'systems_count',\n  renderExport: (task) => task.systems_count,\n};\n\nexport const StatusColumn = {\n  title: 'Status',\n  props: {\n    width: 10,\n  },\n  sortByProp: 'status',\n  renderExport: (task) => task.status,\n  renderFunc: renderColumnComponent(StatusCell),\n};\n\nexport const RunDateTimeColumn = {\n  title: 'Run date/time',\n  props: {\n    width: 20,\n  },\n  sortByProp: 'start_time',\n  renderExport: (task) => task.run_date_time,\n  renderFunc: (_, _empty, result) => result.run_date_time,\n};\n\nexport const exportableColumns = [\n  TaskColumn,\n  SystemsCountColumn,\n  StatusColumn,\n  RunDateTimeColumn,\n];\n\nexport default [\n  TaskColumn,\n  SystemsCountColumn,\n  StatusColumn,\n  RunDateTimeColumn,\n];\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const nameFilter = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Task',\n    filter: (tasks, value) =>\n      tasks.filter((task) =>\n        task.name.toLowerCase().includes(value.toLowerCase())\n      ),\n  },\n];\n\nexport const statusFilter = [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Status',\n    filter: (tasks, value) =>\n      tasks.filter((task) => value.includes(task.status.toLowerCase())),\n    items: [\n      { label: 'Completed', value: 'completed' },\n      { label: 'Running', value: 'running' },\n    ],\n  },\n];\n","import React, { useState, useEffect } from 'react';\nimport { ExclamationCircleIcon, WrenchIcon } from '@patternfly/react-icons';\nimport columns, { exportableColumns } from './Columns';\nimport { nameFilter, statusFilter } from './Filters';\nimport { renderRunDateTime } from '../../Utilities/helpers';\nimport {\n  COMPLETED_TASKS_ERROR,\n  COMPLETED_TASKS_TABLE_DEFAULTS,\n  EMPTY_COMPLETED_TASKS_MESSAGE,\n  EMPTY_COMPLETED_TASKS_TITLE,\n  LOADING_ACTIVITIES_TABLE,\n  TASK_LOADING_CONTENT,\n  TASKS_TABLE_DEFAULTS,\n} from '../../constants';\nimport { fetchExecutedTasks } from '../../../api';\nimport { emptyRows } from '../../PresentationalComponents/NoResultsTable/NoResultsTable';\nimport TasksTables from '../../Utilities/hooks/useTableTools/Components/TasksTables';\nimport EmptyStateDisplay from '../../PresentationalComponents/EmptyStateDisplay/EmptyStateDisplay';\nimport DeleteCancelTaskModal from '../../PresentationalComponents/DeleteCancelTaskModal/DeleteCancelTaskModal';\nimport useActionResolver from './hooks/useActionResolvers';\nimport { useInterval } from '../../Utilities/hooks/useTableTools/useInterval';\nimport {\n  createNotification,\n  fetchTask,\n  fetchTaskJobs,\n  getSelectedSystems,\n  isError,\n} from '../completedTaskDetailsHelpers';\nimport RunTaskModal from '../RunTaskModal/RunTaskModal';\nimport RefreshFooterContent from '../RefreshFooterContent';\nimport usePromiseQueue from '../../Utilities/hooks/usePromiseQueue';\n\nconst ActivityTable = () => {\n  const [activities, setActivities] = useState(LOADING_ACTIVITIES_TABLE);\n  const [activityDetails, setActivityDetails] = useState(TASK_LOADING_CONTENT);\n  const [tableLoading, setTableLoading] = useState(true);\n  const [error, setError] = useState();\n  const [taskError, setTaskError] = useState();\n  const [isDelete, setIsDelete] = useState(false);\n  const [isCancel, setIsCancel] = useState(false);\n  const [isRunTaskAgain, setIsRunTaskAgain] = useState(false);\n  const [isDeleteCancelModalOpened, setIsDeleteCancelModalOpened] =\n    useState(false);\n  const [taskDetails, setTaskDetails] = useState({});\n  const [runTaskModalOpened, setRunTaskModalOpened] = useState(false);\n  const [selectedSystems, setSelectedSystems] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n\n  const { resolve } = usePromiseQueue();\n\n  const fetchTaskDetails = async (id) => {\n    setTaskError();\n    setRunTaskModalOpened(true);\n    const fetchedTaskDetails = await fetchTask(id, setTaskError);\n\n    if (Object.keys(fetchedTaskDetails).length > 0) {\n      const fetchedTaskJobs = await fetchTaskJobs(\n        fetchedTaskDetails,\n        setTaskError\n      );\n\n      setSelectedSystems(getSelectedSystems(fetchedTaskJobs));\n      await setActivityDetails(fetchedTaskDetails);\n    } else {\n      setRunTaskModalOpened(false);\n      await setActivityDetails({});\n    }\n  };\n\n  const fetchData = async (count) => {\n    let results;\n    const batchSize = 200;\n    const pages = Math.ceil(count / batchSize) || 1;\n    const result = await resolve(\n      [...new Array(pages)].map(\n        (_, pageIdx) => () =>\n          fetchExecutedTasks(\n            `?limit=${batchSize}&offset=${batchSize * pageIdx}`\n          )\n      )\n    );\n\n    if (isError(result[0])) {\n      createNotification(result[0]);\n      setError(result[0]);\n    } else {\n      results = result.map(({ data }) => data).flat();\n    }\n\n    if (results.some((result) => result.status === 'Running')) {\n      setIsRunning(true);\n    } else {\n      setIsRunning(false);\n    }\n\n    setTasks(results);\n  };\n\n  const handleCancelOrDeleteTask = async (task) => {\n    await setTaskDetails(task);\n    setIsDeleteCancelModalOpened(true);\n  };\n\n  const actionResolver = useActionResolver(\n    handleCancelOrDeleteTask,\n    fetchTaskDetails\n  );\n\n  const setTasks = async (result) => {\n    result?.map(\n      (task) => (task.run_date_time = renderRunDateTime(task.start_time))\n    );\n\n    await setActivities(result);\n    setTableLoading(false);\n  };\n\n  const refetchData = async () => {\n    setTableLoading(true);\n    await setActivities(LOADING_ACTIVITIES_TABLE);\n    fetchSingleTask();\n  };\n\n  const fetchSingleTask = async () => {\n    setLastUpdated(new Date());\n    const task = await fetchExecutedTasks(`?limit=1&offset=0`);\n    if (isError(task)) {\n      createNotification(task);\n      setError(task);\n      setActivities([]);\n    } else if (task.data.length === 0) {\n      setActivities([]);\n    } else {\n      fetchData(task.meta.count);\n    }\n  };\n\n  useEffect(() => {\n    fetchSingleTask();\n  }, []);\n\n  useInterval(() => {\n    if (isRunning) {\n      fetchSingleTask();\n    }\n  }, 60000);\n\n  useEffect(() => {\n    if (isDelete || isCancel) {\n      refetchData();\n      setIsDelete(false);\n      setIsCancel(false);\n    } else if (isRunTaskAgain) {\n      refetchData();\n      setIsRunTaskAgain(false);\n    }\n  }, [isCancel, isDelete, isRunTaskAgain]);\n\n  return (\n    <React.Fragment>\n      {runTaskModalOpened && (\n        <RunTaskModal\n          description={activityDetails.task_description}\n          error={taskError}\n          isOpen={runTaskModalOpened}\n          parameters={activityDetails.parameters}\n          selectedSystems={selectedSystems}\n          setIsRunTaskAgain={setIsRunTaskAgain}\n          setModalOpened={setRunTaskModalOpened}\n          slug={activityDetails.task_slug}\n          title={activityDetails.task_title}\n          name={activityDetails.name}\n          filterMessage={activityDetails.task_filter_message}\n        />\n      )}\n      <DeleteCancelTaskModal\n        id={taskDetails.id}\n        isOpen={isDeleteCancelModalOpened}\n        setIsCancel={setIsCancel}\n        setIsDelete={setIsDelete}\n        setModalOpened={setIsDeleteCancelModalOpened}\n        startTime={taskDetails.start_time}\n        status={taskDetails.status}\n        title={taskDetails.task_title}\n      />\n      <div aria-label=\"activity\">\n        {error ? (\n          <EmptyStateDisplay\n            icon={ExclamationCircleIcon}\n            color=\"#c9190b\"\n            title={'Activities cannot be displayed'}\n            text={COMPLETED_TASKS_ERROR}\n            error={`Error ${error?.response?.status}: ${error?.message}`}\n          />\n        ) : activities?.length === 0 ? (\n          <EmptyStateDisplay\n            icon={WrenchIcon}\n            color=\"#6a6e73\"\n            title={EMPTY_COMPLETED_TASKS_TITLE}\n            text={EMPTY_COMPLETED_TASKS_MESSAGE}\n          />\n        ) : (\n          <TasksTables\n            label=\"activity-table\"\n            ouiaId=\"activity-table\"\n            columns={columns}\n            items={activities}\n            filters={{\n              filterConfig: [...nameFilter, ...statusFilter],\n            }}\n            options={{\n              ...TASKS_TABLE_DEFAULTS,\n              ...COMPLETED_TASKS_TABLE_DEFAULTS,\n              actionResolver,\n              exportable: {\n                ...TASKS_TABLE_DEFAULTS.exportable,\n                columns: exportableColumns,\n              },\n            }}\n            emptyRows={emptyRows('tasks')}\n            isStickyHeader\n            isTableLoading={tableLoading}\n            footerContent={\n              <RefreshFooterContent\n                date={lastUpdated}\n                isRunning={isRunning}\n                type=\"tasks\"\n              />\n            }\n          />\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ActivityTable;\n","const useActionResolver = (handleTask, fetchTaskDetails) => {\n  const onClick = (funcCall, task) => {\n    funcCall(task);\n  };\n\n  return (row) => [\n    {\n      title: 'Run this task again',\n      onClick: (_event, _index, task) =>\n        onClick(fetchTaskDetails, task.task.title.props.id),\n    },\n    {\n      title: 'Delete',\n      isDisabled: row.task.title.props.status !== 'Completed',\n      /*row.task.title.props.status === 'Completed' ||\n        row.task.title.props.status === 'Cancelled'\n          ? 'Delete'\n          : 'Cancel',*/\n      onClick: (_event, _index, task) => {\n        onClick(handleTask, task.task.title.props);\n      },\n    },\n  ];\n};\n\nexport default useActionResolver;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { StackItem, Stack } from '@patternfly/react-core';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { TasksTabs } from '../../PresentationalComponents';\nimport RunTaskModal from '../RunTaskModal/RunTaskModal';\nimport {\n  TASKS_PAGE_HEADER,\n  TASKS_PAGE_HEADER_FLEX_PROPS,\n  TASKS_PAGE_TABS,\n} from '../../constants';\nimport FlexibleFlex from '../../PresentationalComponents/FlexibleFlex/FlexibleFlex';\nimport AvailableTasks from '../AvailableTasks/AvailableTasks';\nimport ActivityTable from '../../SmartComponents/ActivityTable/ActivityTable';\nimport { fetchAvailableTask } from '../../../api';\nimport { dispatchNotification } from '../../Utilities/Dispatcher';\n\nimport './tasks-page.scss';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate';\n\nconst TasksPage = ({ tab }) => {\n  const [tabIndex, setTab] = useState(tab);\n  const [runTaskModalOpened, setRunTaskModalOpened] = useState(false);\n  const [activeTask, setActiveTask] = useState({});\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setTab(tab);\n    setRunTaskModalOpened(false);\n  }, [tab]);\n\n  const navigate = useInsightsNavigate();\n\n  const updateTab = (event, index) => {\n    navigate(index ? '/executed' : '/available');\n  };\n\n  const openTaskModal = async (value, slug) => {\n    const task = await fetchAvailableTask(slug);\n    if (task?.response?.status && task?.response?.status !== 200) {\n      setError(task);\n      dispatchNotification({\n        variant: 'danger',\n        title: 'Error',\n        description: task.message,\n        dismissable: true,\n        autoDismiss: false,\n      });\n    } else {\n      setActiveTask(task);\n    }\n\n    setRunTaskModalOpened(value);\n  };\n\n  return (\n    <React.Fragment>\n      {runTaskModalOpened ? (\n        <RunTaskModal\n          description={activeTask.description}\n          error={error}\n          isOpen={runTaskModalOpened}\n          parameters={activeTask.parameters}\n          selectedSystems={[]}\n          setModalOpened={setRunTaskModalOpened}\n          slug={activeTask.slug}\n          title={activeTask.title}\n          filterMessage={activeTask.filter_message}\n        />\n      ) : null}\n      <PageHeader>\n        <FlexibleFlex\n          flexContents={TASKS_PAGE_HEADER}\n          flexProps={TASKS_PAGE_HEADER_FLEX_PROPS}\n        />\n      </PageHeader>\n      <TasksTabs\n        className=\"tabs-background\"\n        tabIndex={tabIndex}\n        updateTab={updateTab}\n        tabsList={TASKS_PAGE_TABS}\n      />\n      <section className=\"pf-v5-l-page__main-section pf-v5-c-page__main-section\">\n        <Stack hasGutter>\n          <StackItem>\n            {tabIndex === 0 ? (\n              <AvailableTasks openTaskModal={openTaskModal} />\n            ) : (\n              <ActivityTable openTaskModal={openTaskModal} />\n            )}\n          </StackItem>\n        </Stack>\n      </section>\n    </React.Fragment>\n  );\n};\n\nTasksPage.propTypes = {\n  tab: propTypes.number,\n};\n\nexport default TasksPage;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","TasksTabs","className","tabIndex","tabsList","updateTab","Tabs","activeKey","onSelect","map","tabName","index","Tab","id","key","eventKey","title","TabTitleText","propTypes","PropTypes","SLUG_TO_QUICKSTART","QUICKSTART_TO_FEATURE_FLAG","QuickstartButton","flag","flagsReady","isFlagEnabled","slug","quickstartName","featureFlagName","quickStarts","useChrome","undefined","useFlagsStatus","useFlag","Button","variant","icon","iconPosition","onClick","activateQuickstart","TaskCard","task","openTaskModal","useState","isExpanded","setIsExpanded","Card","CardHeader","onExpand","toggleButtonProps","CardTitle","CardExpandableContent","CardBody","Flex","direction","default","FlexItem","description","href","TASKS_API_ROOT","AVAILABLE_TASKS_ROOT","includes","CONVERSION_SLUG","CardFooter","RunTaskButton","isFirst","Object","keys","isRequired","AvailableTasksTable","availableTasks","error","EmptyStateDisplay","ExclamationCircleIcon","color","text","TASKS_ERROR","response","status","message","length","EMPTY_TASKS_TITLE","EMPTY_TASKS_MESSAGE","LoadingTasks","Array","from","Skeleton","size","SkeletonSize","AvailableTasks","setAvailableTasks","isLoading","setIsLoading","setError","chrome","setTasks","result","isError","dispatchNotification","dismissable","autoDismiss","data","useEffect","fetchData","fetchAvailableTasks","updateDocumentTitle","TaskNameCell","InsightsLink","to","StatusCell","Completed","style","display","alignItems","Icon","marginRight","Running","TaskColumn","props","sortByProp","renderExport","renderFunc","renderColumnComponent","SystemsCountColumn","systems_count","StatusColumn","RunDateTimeColumn","run_date_time","_","_empty","exportableColumns","nameFilter","type","conditionalFilterType","label","filter","tasks","value","toLowerCase","statusFilter","items","LOADING_ACTIVITIES_TABLE","activities","setActivities","TASK_LOADING_CONTENT","activityDetails","setActivityDetails","tableLoading","setTableLoading","taskError","setTaskError","isDelete","setIsDelete","isCancel","setIsCancel","isRunTaskAgain","setIsRunTaskAgain","isDeleteCancelModalOpened","setIsDeleteCancelModalOpened","taskDetails","setTaskDetails","runTaskModalOpened","setRunTaskModalOpened","selectedSystems","setSelectedSystems","lastUpdated","setLastUpdated","isRunning","setIsRunning","resolve","usePromiseQueue","fetchTaskDetails","fetchTask","fetchedTaskDetails","fetchTaskJobs","fetchedTaskJobs","getSelectedSystems","count","pages","Math","ceil","pageIdx","fetchExecutedTasks","createNotification","results","flat","some","handleCancelOrDeleteTask","actionResolver","handleTask","funcCall","row","_event","_index","isDisabled","useActionResolver","renderRunDateTime","start_time","refetchData","fetchSingleTask","Date","meta","useInterval","RunTaskModal","task_description","isOpen","parameters","setModalOpened","task_slug","task_title","filterMessage","task_filter_message","DeleteCancelTaskModal","startTime","COMPLETED_TASKS_ERROR","WrenchIcon","EMPTY_COMPLETED_TASKS_TITLE","EMPTY_COMPLETED_TASKS_MESSAGE","TasksTables","ouiaId","columns","filters","filterConfig","options","TASKS_TABLE_DEFAULTS","COMPLETED_TASKS_TABLE_DEFAULTS","exportable","emptyRows","isStickyHeader","isTableLoading","footerContent","RefreshFooterContent","date","TasksPage","tab","setTab","activeTask","setActiveTask","navigate","useInsightsNavigate","fetchAvailableTask","filter_message","PageHeader","FlexibleFlex","flexContents","TASKS_PAGE_HEADER","flexProps","TASKS_PAGE_HEADER_FLEX_PROPS","event","TASKS_PAGE_TABS","Stack","hasGutter","StackItem"],"sourceRoot":""}