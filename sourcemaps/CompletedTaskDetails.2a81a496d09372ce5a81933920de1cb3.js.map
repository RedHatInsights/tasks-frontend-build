{"version":3,"file":"js/CompletedTaskDetails.642e0dbd7d728256e856.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/info-circle-icon.js","webpack:///./src/PresentationalComponents/SplitMessages/SplitMessages.js","webpack:///./src/SmartComponents/CompletedTaskDetails/Columns.js","webpack:///./src/SmartComponents/CompletedTaskDetails/Filters.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/SmartComponents/CompletedTaskDetails/TaskEntries.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/EntryRow.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/EntryRowLabel.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/EntryDetails.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/jobResultsDetailsHelpers.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/ExpandedIssues.js","webpack:///./src/SmartComponents/CompletedTaskDetails/JobResultsDetails/JobResultsDetails.js","webpack:///./src/SmartComponents/CompletedTaskDetails/ParameterDetails.js","webpack:///./src/SmartComponents/CompletedTaskDetails/CompletedTaskDetails.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.InfoCircleIconConfig = {\n  name: 'InfoCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InfoCircleIcon = require('../createIcon').createIcon(exports.InfoCircleIconConfig);\nexports[\"default\"] = exports.InfoCircleIcon;","import React from 'react';\nimport { Icon, Split, SplitItem } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\n\nconst SplitMessages = ({ alert, content }) => {\n  return (\n    <Split>\n      {alert ? (\n        <React.Fragment>\n          <SplitItem style={{ paddingRight: '8px' }}>\n            <Icon status=\"danger\">\n              <ExclamationCircleIcon />\n            </Icon>\n          </SplitItem>\n          <SplitItem style={{ paddingRight: '16px' }}>\n            <span style={{ color: '#C9190B' }}>Alert</span>\n          </SplitItem>\n        </React.Fragment>\n      ) : null}\n      <SplitItem color=\"#A30000\">{content}</SplitItem>\n    </Split>\n  );\n};\n\nSplitMessages.propTypes = {\n  alert: propTypes.bool,\n  content: propTypes.oneOfType([propTypes.string, propTypes.object]),\n};\n\nexport default SplitMessages;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { renderColumnComponent } from '../../Utilities/helpers';\nimport SplitMessages from '../../PresentationalComponents/SplitMessages/SplitMessages';\nimport { createSystemLink } from '../../helpers';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst SystemNameCell = ({ system, display_name }, index) => {\n  const chrome = useChrome();\n\n  if (display_name) {\n    return createSystemLink(\n      system,\n      display_name,\n      `system-title-${index}`,\n      chrome?.isBeta?.()\n    );\n  } else {\n    return <span style={{ color: '#72767B' }}>System deleted</span>;\n  }\n};\n\nSystemNameCell.propTypes = {\n  system: propTypes.string,\n  display_name: propTypes.node,\n};\n\nexport const SystemColumn = {\n  title: 'System name',\n  props: {\n    width: 30,\n  },\n  sortByProp: 'display_name',\n  renderExport: (job) => job.display_name || 'System deleted',\n  renderFunc: renderColumnComponent(SystemNameCell),\n};\n\nexport const StatusColumn = {\n  title: 'Status',\n  props: {\n    width: 10,\n  },\n  sortByProp: 'status',\n  renderExport: (job) => job.status,\n};\n\nexport const MessageColumn = {\n  title: 'Message',\n  props: {\n    width: 35,\n  },\n  sortByFunction: (job) => job.results.message,\n  renderExport: (job) => job.results.message,\n  renderFunc: (_, _empty, job) => (\n    <SplitMessages\n      content={job.results.message}\n      alert={\n        job.results.alert ||\n        job.status === 'Failure' ||\n        job.status === 'Timeout'\n      }\n    />\n  ),\n};\n\nexport const exportableColumns = [SystemColumn, StatusColumn, MessageColumn];\nexport const conversionColumns = [SystemColumn, MessageColumn];\n\nexport default [SystemColumn, StatusColumn, MessageColumn];\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const systemFilter = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (jobs, value) =>\n      jobs.filter((job) =>\n        job.display_name\n          ? job.display_name.toLowerCase().includes(value.toLowerCase())\n          : null\n      ),\n  },\n];\n\nexport const statusFilters = [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Status',\n    filter: (jobs, value) =>\n      jobs.filter((job) => value.includes(job.status.toLowerCase())),\n    items: [\n      { label: 'Running', value: 'running' },\n      { label: 'Success', value: 'success' },\n      { label: 'Failure', value: 'failure' },\n      { label: 'Timeout', value: 'timeout' },\n    ],\n  },\n];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { BreadcrumbItem } from '@patternfly/react-core';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink';\n\nconst RouterLink = ({ href, ...props }) => {\n  return <InsightsLink {...props} to={href} />;\n};\n\nRouterLink.propTypes = {\n  href: propTypes.string,\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n  <BreadcrumbItem {...props} component={RouterLink}>\n    {children}\n  </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n  children: propTypes.node,\n};\n\nexport default BreadcrumbLinkItem;\n","import {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n} from '@patternfly/react-icons';\nimport React from 'react';\n\nconst converttorhelconversionSeverityMap = {\n  error: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  overridable: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  skip: {\n    text: 'Skipped',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 1500,\n  },\n  warning: {\n    text: 'Warning',\n    icon: <ExclamationTriangleIcon />,\n    iconSeverityColor: 'warning',\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon />,\n    iconSeverityColor: 'info',\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\n// constant to be removed\nconst converttorhelconversionstageSeverityMap = {\n  error: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  overridable: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  skip: {\n    text: 'Skipped',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 1500,\n  },\n  warning: {\n    text: 'Warning',\n    icon: <ExclamationTriangleIcon />,\n    iconSeverityColor: 'warning',\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon />,\n    iconSeverityColor: 'info',\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\nconst converttorhelpreanalysisSeverityMap = {\n  error: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  overridable: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  skip: {\n    text: 'Skipped',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 1500,\n  },\n  warning: {\n    text: 'Warning',\n    icon: <ExclamationTriangleIcon />,\n    iconSeverityColor: 'warning',\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon />,\n    iconSeverityColor: 'info',\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\n// constant to be removed\nconst converttorhelpreanalysisstageSeverityMap = {\n  error: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  overridable: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  skip: {\n    text: 'Skipped',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 1500,\n  },\n  warning: {\n    text: 'Warning',\n    icon: <ExclamationTriangleIcon />,\n    iconSeverityColor: 'warning',\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon />,\n    iconSeverityColor: 'info',\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\nconst leapppreupgradeSeverityMap = {\n  inhibitor: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  high: {\n    text: 'High risk',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  medium: {\n    text: 'Medium risk',\n    icon: <ExclamationTriangleIcon />,\n    iconSeverityColor: 'warning',\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1500,\n  },\n  low: {\n    text: 'Low risk',\n    icon: <ExclamationTriangleIcon />,\n    iconSeverityColor: 'warning',\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon />,\n    iconSeverityColor: 'info',\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\nconst leappupgradeSeverityMap = {\n  inhibitor: {\n    text: 'Inhibitor',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2500,\n  },\n  high: {\n    text: 'High risk',\n    icon: <ExclamationCircleIcon />,\n    iconSeverityColor: 'danger',\n    titleColor: '#A30000',\n    severityColor: 'red',\n    severityLevel: 2000,\n  },\n  medium: {\n    text: 'Medium risk',\n    icon: <ExclamationTriangleIcon />,\n    iconSeverityColor: 'warning',\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1500,\n  },\n  low: {\n    text: 'Low risk',\n    icon: <ExclamationTriangleIcon />,\n    iconSeverityColor: 'warning',\n    titleColor: '#795000',\n    severityColor: 'orange',\n    severityLevel: 1000,\n  },\n  info: {\n    text: 'Info',\n    icon: <InfoCircleIcon />,\n    iconSeverityColor: 'info',\n    titleColor: '#002952',\n    severityColor: 'blue',\n    severityLevel: 500,\n  },\n};\n\n// constants to be removed\nconst leappupgradestageSeverityMap = leappupgradeSeverityMap;\nconst leapppreupgradestageSeverityMap = leapppreupgradeSeverityMap;\nconst leappupgradescriptstageSeverityMap = leappupgradeSeverityMap;\nconst leapppreupgradescriptstageSeverityMap = leapppreupgradeSeverityMap;\n\nexport default {\n  converttorhelconversionSeverityMap,\n  converttorhelconversionstageSeverityMap,\n  converttorhelpreanalysisSeverityMap,\n  converttorhelpreanalysisstageSeverityMap,\n  leapppreupgradeSeverityMap,\n  leapppreupgradescriptstageSeverityMap,\n  leapppreupgradestageSeverityMap,\n  leappupgradeSeverityMap,\n  leappupgradescriptstageSeverityMap,\n  leappupgradestageSeverityMap,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport severityMap from '../TaskEntries';\nimport { Icon } from '@patternfly/react-core';\n\nconst EntryRow = ({ severity, taskConstantMapper, title }) => {\n  const mappedSeverity =\n    severityMap[taskConstantMapper][severity.toLowerCase()];\n  const renderIcon = () => {\n    return (\n      <Icon\n        status={mappedSeverity['iconSeverityColor']}\n        style={{ marginRight: '8px' }}\n      >\n        {mappedSeverity['icon']}\n      </Icon>\n    );\n  };\n\n  const renderTitle = () => {\n    return (\n      <span\n        style={{\n          color: mappedSeverity['titleColor'],\n        }}\n      >\n        <strong>{title}</strong>\n      </span>\n    );\n  };\n\n  return (\n    <span>\n      {renderIcon()}\n      {renderTitle()}\n    </span>\n  );\n};\n\nEntryRow.propTypes = {\n  severity: propTypes.string,\n  taskConstantMapper: propTypes.string,\n  title: propTypes.string,\n};\n\nexport default EntryRow;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\n\nconst EntryRowLabel = ({ color, icon, text }) => {\n  return (\n    <Label\n      color={color}\n      icon={icon}\n      style={{ marginTop: '16px', marginBottom: '4px' }}\n      className=\"pf-m-compact\"\n    >\n      {text}\n    </Label>\n  );\n};\n\nEntryRowLabel.propTypes = {\n  color: propTypes.string,\n  icon: propTypes.any,\n  text: propTypes.string,\n};\n\nexport default EntryRowLabel;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport EntryRowLabel from './EntryRowLabel';\nimport severityMap from '../TaskEntries';\n\nconst EntryDetails = ({ entry, taskConstantMapper }) => {\n  const { detail, key, severity, summary, title } = entry;\n\n  const getLabelType = () => {\n    return (\n      <EntryRowLabel\n        color={\n          severityMap[taskConstantMapper][severity.toLowerCase()][\n            'severityColor'\n          ]\n        }\n        icon={severityMap[taskConstantMapper][severity.toLowerCase()]['icon']}\n        text={severityMap[taskConstantMapper][severity.toLowerCase()]['text']}\n      />\n    );\n  };\n\n  const renderResolutionDetails = (content, type, classname) => {\n    return content.map((item, index) => {\n      let key = `${type}-${index}`;\n      return (\n        <div key={key}>\n          {index > 0 ? (\n            <span>\n              <br />\n            </span>\n          ) : null}\n          <span className={classname}>\n            {item.type\n              ? `[${item.type}] ${\n                  item.type === 'command' && Array.isArray(item.context)\n                    ? item.context.join(' ')\n                    : item.context\n                }`\n              : `${item.context}`}\n          </span>\n        </div>\n      );\n    });\n  };\n\n  const createGrid = (itemOneContent, itemTwoContent) => {\n    return (\n      <Grid hasGutter className=\"entry-detail-title\">\n        <GridItem span={2} className=\"entry-detail-content\">\n          {itemOneContent}\n        </GridItem>\n        <GridItem\n          xl2={5}\n          xl={5}\n          l={6}\n          m={7}\n          sm={8}\n          style={{ whiteSpace: 'pre-line' }}\n        >\n          {typeof itemTwoContent === 'function'\n            ? itemTwoContent()\n            : itemTwoContent}\n        </GridItem>\n      </Grid>\n    );\n  };\n\n  const renderDetails = () => {\n    return (\n      <React.Fragment>\n        {createGrid('Summary', summary)}\n        {detail?.diagnosis && detail?.diagnosis?.[0]?.context !== ''\n          ? createGrid(\n              'Diagnosis',\n              renderResolutionDetails(detail.diagnosis, 'diagnosis')\n            )\n          : null}\n        {detail?.remediations && detail?.remediations?.[0]?.context !== ''\n          ? createGrid(\n              'Remediation',\n              renderResolutionDetails(\n                detail.remediations,\n                'remediations',\n                'remediations-font-family'\n              )\n            )\n          : null}\n        {createGrid('Key', key)}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <div>{getLabelType()}</div>\n      <div className=\"entry-title\">{title}</div>\n      <div>{renderDetails()}</div>\n    </React.Fragment>\n  );\n};\n\nEntryDetails.propTypes = {\n  entry: propTypes.object,\n  taskConstantMapper: propTypes.string,\n};\n\nexport default EntryDetails;\n","import React from 'react';\nimport EntryRow from './EntryRow';\nimport EntryDetails from './EntryDetails';\nimport severityMap from '../TaskEntries';\n\nconst sortBySeverity = (entries, taskConstantMapper) => {\n  let sortedEntries = entries.sort((a, b) => {\n    let aSeverity =\n      severityMap[taskConstantMapper][a.severity.toLowerCase()].severityLevel;\n    let bSeverity =\n      severityMap[taskConstantMapper][b.severity.toLowerCase()].severityLevel;\n    if (aSeverity > bSeverity) {\n      return -1;\n    }\n\n    if (bSeverity > aSeverity) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  return sortedEntries;\n};\n\nexport const buildResultsRows = (entries, isReportJson, taskSlug) => {\n  let taskConstantMapper = taskSlug.toLowerCase().replace(/-/g, '');\n  let rows = [];\n  let sortedEntries;\n  if (isReportJson) {\n    sortedEntries = sortBySeverity(entries, `${taskConstantMapper}SeverityMap`);\n    sortedEntries.forEach((entry) => {\n      rows.push({\n        parent: (\n          <EntryRow\n            severity={entry.severity}\n            title={entry.title}\n            taskConstantMapper={`${taskConstantMapper}SeverityMap`}\n          />\n        ),\n        child: (\n          <EntryDetails\n            entry={entry}\n            taskConstantMapper={`${taskConstantMapper}SeverityMap`}\n          />\n        ),\n      });\n    });\n  } else {\n    sortedEntries = entries;\n    rows = sortedEntries[0];\n  }\n\n  return rows;\n};\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { Tr, Td } from '@patternfly/react-table';\nimport { CodeBlock, CodeBlockCode } from '@patternfly/react-core';\nimport { c_code_block__header_BorderBottomColor } from '@patternfly/react-tokens';\nimport { global_palette_white } from '@patternfly/react-tokens';\n\nconst ExpandedIssues = ({ rowPairs, isReportJson }) => {\n  let rowIndex = 0;\n\n  const [expanded, setExpanded] = useState(\n    Object.fromEntries(\n      Object.entries(rowPairs).map(([k]) => [k, Boolean(false)])\n    )\n  );\n\n  const handleExpansionToggle = (event, pairIndex) => {\n    setExpanded({\n      ...expanded,\n      [pairIndex]: !expanded[pairIndex],\n    });\n  };\n\n  const renderParentRow = (parent, pairIndex) => {\n    let parentRow = (\n      <Tr key={rowIndex}>\n        <Td\n          expand={{\n            rowIndex: pairIndex,\n            isExpanded: expanded[pairIndex],\n            onToggle: handleExpansionToggle,\n          }}\n        />\n        <Td>{parent}</Td>\n      </Tr>\n    );\n\n    rowIndex += 1;\n    return parentRow;\n  };\n\n  const renderChildRow = (child, pairIndex) => {\n    let childRow = (\n      <Tr\n        className={expanded[pairIndex] === true ? 'pf-m-expanded' : null}\n        key={rowIndex}\n        isExpanded={expanded[pairIndex] === true}\n      >\n        <Td />\n        <Td>{child}</Td>\n      </Tr>\n    );\n\n    rowIndex += 1;\n    return childRow;\n  };\n\n  const renderRows = () => {\n    if (isReportJson) {\n      return rowPairs.map((row, pairIndex) => {\n        return (\n          <React.Fragment key={pairIndex}>\n            {renderParentRow(row.parent, pairIndex)}\n            {renderChildRow(row.child, pairIndex)}\n          </React.Fragment>\n        );\n      });\n    } else\n      return (\n        <CodeBlock\n          style={{\n            [c_code_block__header_BorderBottomColor.name]: global_palette_white,\n            backgroundColor: '#ffffff',\n          }}\n        >\n          <CodeBlockCode>\n            {typeof rowPairs === 'object' &&\n            rowPairs !== null &&\n            !Array.isArray(rowPairs)\n              ? JSON.stringify(rowPairs, null, 2)\n              : rowPairs}\n          </CodeBlockCode>\n        </CodeBlock>\n      );\n  };\n\n  return renderRows();\n};\n\nExpandedIssues.propTypes = {\n  isReportJson: propTypes.bool,\n  rowPairs: propTypes.array,\n};\n\nexport default ExpandedIssues;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Table, Tbody } from '@patternfly/react-table';\nimport { buildResultsRows } from './jobResultsDetailsHelpers';\nimport ExpandedIssues from './ExpandedIssues';\n\nconst JobResultsDetails = ({ taskSlug, item }) => {\n  const isReportJson = item.results.report_json?.entries ? true : false;\n\n  const rowPairs = isReportJson\n    ? buildResultsRows(item.results.report_json.entries, isReportJson, taskSlug)\n    : buildResultsRows([item.results.report], isReportJson, taskSlug);\n\n  return (\n    <div>\n      <Table\n        variant=\"compact\"\n        style={{\n          marginBottom: '30px',\n          '--pf-v5-c-table__expandable-row--after--border-width--base': '0',\n        }}\n      >\n        <Tbody>\n          <ExpandedIssues rowPairs={rowPairs} isReportJson={isReportJson} />\n        </Tbody>\n      </Table>\n    </div>\n  );\n};\n\nJobResultsDetails.propTypes = {\n  item: propTypes.object,\n  taskSlug: propTypes.string,\n};\n\nexport default JobResultsDetails;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Flex,\n  FlexItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\n\nconst ParameterDetails = ({ parameters }) => {\n  const parametersExist = parameters?.length ? true : false;\n\n  return (\n    parametersExist && (\n      <Flex>\n        <FlexItem>\n          <TextContent>\n            <Text component={TextVariants.h4}>Parameter details</Text>\n            {parameters.map((parameter) => (\n              <Text\n                key={`parameter-${parameter.key}`}\n                component={TextVariants.p}\n                className=\"pf-u-mb-sm\"\n              >\n                {parameter.key}: <b>{parameter.value}</b>\n              </Text>\n            ))}\n          </TextContent>\n        </FlexItem>\n      </Flex>\n    )\n  );\n};\n\nParameterDetails.propTypes = {\n  parameters: propTypes.array,\n};\n\nexport default ParameterDetails;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport TasksTables from '../../Utilities/hooks/useTableTools/Components/TasksTables';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  Flex,\n  FlexItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport columns, { conversionColumns, exportableColumns } from './Columns';\nimport { statusFilters, systemFilter } from './Filters';\nimport {\n  COMPLETED_INFO_PANEL,\n  COMPLETED_INFO_PANEL_FLEX_PROPS,\n  COMPLETED_INFO_BUTTONS,\n  COMPLETED_INFO_BUTTONS_FLEX_PROPS,\n  LOADING_INFO_PANEL,\n  LOADING_JOBS_TABLE,\n  TASK_ERROR,\n  TASKS_TABLE_DEFAULTS,\n} from '../../constants';\nimport FlexibleFlex from '../../PresentationalComponents/FlexibleFlex/FlexibleFlex';\nimport EmptyStateDisplay from '../../PresentationalComponents/EmptyStateDisplay/EmptyStateDisplay';\nimport RunTaskModal from '../RunTaskModal/RunTaskModal';\nimport DeleteCancelTaskModal from '../../PresentationalComponents/DeleteCancelTaskModal/DeleteCancelTaskModal';\nimport { emptyRows } from '../../PresentationalComponents/NoResultsTable/NoResultsTable';\nimport BreadcrumbLinkItem from '../../PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem';\nimport RefreshFooterContent from '../RefreshFooterContent';\nimport {\n  getSelectedSystems,\n  fetchTask,\n  fetchTaskJobs,\n  hasDetails,\n} from '../completedTaskDetailsHelpers';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport JobResultsDetails from './JobResultsDetails/JobResultsDetails';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate';\nimport ReactMarkdown from 'react-markdown';\nimport { useInterval } from '../../Utilities/hooks/useTableTools/useInterval';\nimport ParameterDetails from './ParameterDetails';\n\nconst CompletedTaskDetails = () => {\n  const { id } = useParams();\n  const [completedTaskDetails, setCompletedTaskDetails] =\n    useState(LOADING_INFO_PANEL);\n  const [completedTaskJobs, setCompletedTaskJobs] =\n    useState(LOADING_JOBS_TABLE);\n  const [tableLoading, setTableLoading] = useState(true);\n  const [error, setError] = useState();\n  const [runTaskModalOpened, setRunTaskModalOpened] = useState(false);\n  const [selectedSystems, setSelectedSystems] = useState([]);\n  const [isDeleteCancelModalOpened, setIsDeleteCancelModalOpened] =\n    useState(false);\n  const [isDelete, setIsDelete] = useState(false);\n  const [isCancel, setIsCancel] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState();\n  const [isRunning, setIsRunning] = useState(false);\n  const chrome = useChrome();\n  const { hasAccess, isLoading } = usePermissions('inventory', [\n    'inventory:hosts:*',\n    'inventory:hosts:read',\n  ]);\n  const navigate = useInsightsNavigate();\n\n  const fetchData = async () => {\n    setLastUpdated(` ${moment().format('dddd, MMMM Do YYYY, h:mm a')}`);\n    setTableLoading(true);\n    const fetchedTaskDetails = await fetchTask(id, setError);\n\n    if (Object.keys(fetchedTaskDetails).length) {\n      const fetchedTaskJobs = await fetchTaskJobs(fetchedTaskDetails, setError);\n\n      if (fetchedTaskJobs.length) {\n        if (fetchedTaskJobs.some((job) => job.status === 'Running')) {\n          setIsRunning(true);\n        } else {\n          setIsRunning(false);\n        }\n        await setCompletedTaskDetails(fetchedTaskDetails);\n        await setCompletedTaskJobs(fetchedTaskJobs);\n      }\n    }\n    setTableLoading(false);\n  };\n\n  useInterval(() => {\n    if (isRunning) {\n      fetchData();\n    }\n  }, 60000);\n\n  useEffect(() => {\n    fetchData();\n  }, [id]);\n\n  useEffect(() => {\n    completedTaskDetails &&\n      chrome.updateDocumentTitle(\n        `${completedTaskDetails.name} - Tasks | Red Hat Insights`\n      );\n  }, [chrome, completedTaskDetails]);\n\n  useEffect(() => {\n    setSelectedSystems(getSelectedSystems(completedTaskJobs));\n  }, [completedTaskJobs]);\n\n  useEffect(() => {\n    if (isDelete) {\n      navigate('/executed');\n      setIsDelete(false);\n    }\n    // Not currently being used, but may be used later\n    /*if (isCancel) {\n      fetchData();\n      setIsCancel(false);\n    }*/\n  }, [isCancel, isDelete]);\n\n  const JobResultsRow = useMemo(\n    () =>\n      function Row(props) {\n        return (\n          <JobResultsDetails\n            taskSlug={completedTaskDetails.task_slug}\n            {...props}\n          />\n        );\n      },\n    [completedTaskJobs]\n  );\n\n  const isConversionTask = () => {\n    if (\n      completedTaskDetails.task_slug === 'convert-to-rhel-conversion-stage' ||\n      completedTaskDetails.task_slug === 'convert-to-rhel-conversion'\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const buildFilterConfig = () => {\n    if (isConversionTask()) {\n      return { filterConfig: [...systemFilter] };\n    } else {\n      return { filterConfig: [...systemFilter, ...statusFilters] };\n    }\n  };\n\n  return (\n    <div>\n      {runTaskModalOpened && (\n        <RunTaskModal\n          description={completedTaskDetails.task_description}\n          error={error}\n          isOpen={runTaskModalOpened}\n          parameters={completedTaskDetails.parameters}\n          selectedSystems={selectedSystems}\n          setModalOpened={setRunTaskModalOpened}\n          slug={completedTaskDetails.task_slug}\n          title={completedTaskDetails.name}\n          name={completedTaskDetails.name}\n          filterMessage={completedTaskDetails.task_filter_message}\n        />\n      )}\n      <DeleteCancelTaskModal\n        id={completedTaskDetails.id}\n        isOpen={isDeleteCancelModalOpened}\n        setIsCancel={setIsCancel}\n        setIsDelete={setIsDelete}\n        setModalOpened={setIsDeleteCancelModalOpened}\n        startTime={completedTaskDetails.start_time}\n        status={completedTaskDetails.status}\n        title={completedTaskDetails.name}\n      />\n      {error ? (\n        <EmptyStateDisplay\n          icon={ExclamationCircleIcon}\n          color=\"#c9190b\"\n          title={'Task cannot be displayed'}\n          text={TASK_ERROR}\n          error={`Error ${error?.response?.status}: ${error?.message}`}\n        />\n      ) : (\n        <React.Fragment>\n          <PageHeader>\n            <Breadcrumb ouiaId=\"completed-tasks-details-breadcrumb\">\n              <BreadcrumbLinkItem to=\"/executed\">Tasks</BreadcrumbLinkItem>\n              <BreadcrumbItem isActive>\n                {completedTaskDetails.name}\n              </BreadcrumbItem>\n            </Breadcrumb>\n            <Flex\n              columnGap={{ default: 'columnGapSm' }}\n              direction={{ default: 'column', md: 'row' }}\n            >\n              <Flex\n                direction={{ default: 'column' }}\n                flex={{ default: 'flex_1' }}\n              >\n                <FlexItem>\n                  <PageHeaderTitle title={completedTaskDetails.name} />\n                  <TextContent>\n                    <Text component={TextVariants.small}>\n                      {completedTaskDetails.task_title}\n                    </Text>\n                  </TextContent>\n                </FlexItem>\n                <FlexItem>\n                  <ReactMarkdown>\n                    {completedTaskDetails.task_description}\n                  </ReactMarkdown>\n                </FlexItem>\n                <ParameterDetails\n                  parameters={completedTaskDetails.parameters}\n                />\n              </Flex>\n              <FlexibleFlex\n                data={completedTaskDetails}\n                flexContents={COMPLETED_INFO_BUTTONS(\n                  completedTaskDetails.task_slug,\n                  setRunTaskModalOpened,\n                  completedTaskDetails.status,\n                  setIsDeleteCancelModalOpened\n                )}\n                flexProps={COMPLETED_INFO_BUTTONS_FLEX_PROPS}\n              />\n            </Flex>\n          </PageHeader>\n          <section className=\"pf-v5-l-page__main-section pf-v5-c-page__main-section\">\n            <Card>\n              <Flex\n                className=\"completed-task-details-info-border\"\n                justifyContent={{ default: 'justifyContentSpaceBetween' }}\n                direction={{ default: 'column', md: 'row' }}\n              >\n                <FlexibleFlex\n                  data={completedTaskDetails}\n                  flexContents={COMPLETED_INFO_PANEL}\n                  flexProps={COMPLETED_INFO_PANEL_FLEX_PROPS}\n                />\n              </Flex>\n            </Card>\n            <br />\n            <Card>\n              {!isLoading && hasAccess ? (\n                <TasksTables\n                  label={`${completedTaskDetails.id}-completed-jobs`}\n                  ouiaId={`${completedTaskDetails.id}-completed-jobs-table`}\n                  columns={isConversionTask() ? conversionColumns : columns}\n                  items={completedTaskJobs}\n                  filters={buildFilterConfig()}\n                  options={{\n                    ...TASKS_TABLE_DEFAULTS,\n                    exportable: {\n                      ...TASKS_TABLE_DEFAULTS.exportable,\n                      columns: isConversionTask()\n                        ? conversionColumns\n                        : exportableColumns,\n                    },\n                    detailsComponent: completedTaskJobs.some((job) =>\n                      hasDetails(job)\n                    )\n                      ? JobResultsRow\n                      : undefined,\n                  }}\n                  emptyRows={emptyRows('jobs')}\n                  isStickyHeader\n                  isTableLoading={tableLoading}\n                  footerContent={\n                    <RefreshFooterContent\n                      footerContent={lastUpdated}\n                      isRunning={isRunning}\n                      type=\"jobs\"\n                    />\n                  }\n                />\n              ) : (\n                <NotAuthorized serviceName=\"Inventory\" />\n              )}\n            </Card>\n          </section>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default CompletedTaskDetails;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","SplitMessages","alert","content","Split","SplitItem","style","paddingRight","Icon","status","color","propTypes","SystemNameCell","index","system","display_name","chrome","useChrome","createSystemLink","isBeta","SystemColumn","title","props","sortByProp","renderExport","job","renderFunc","renderColumnComponent","StatusColumn","MessageColumn","sortByFunction","results","message","_","_empty","exportableColumns","conversionColumns","systemFilter","type","conditionalFilterType","label","filter","jobs","value","toLowerCase","includes","statusFilters","items","RouterLink","href","InsightsLink","to","BreadcrumbLinkItem","children","BreadcrumbItem","component","converttorhelconversionSeverityMap","error","text","icon","iconSeverityColor","titleColor","severityColor","severityLevel","overridable","skip","warning","info","converttorhelconversionstageSeverityMap","converttorhelpreanalysisSeverityMap","converttorhelpreanalysisstageSeverityMap","leapppreupgradeSeverityMap","inhibitor","high","medium","low","leappupgradeSeverityMap","leapppreupgradescriptstageSeverityMap","leapppreupgradestageSeverityMap","leappupgradescriptstageSeverityMap","leappupgradestageSeverityMap","EntryRow","severity","taskConstantMapper","mappedSeverity","severityMap","marginRight","EntryRowLabel","Label","marginTop","marginBottom","className","EntryDetails","entry","detail","key","summary","renderResolutionDetails","classname","map","item","Array","isArray","context","join","createGrid","itemOneContent","itemTwoContent","Grid","hasGutter","GridItem","span","xl2","xl","l","m","sm","whiteSpace","diagnosis","remediations","ExpandedIssues","rowPairs","isReportJson","rowIndex","useState","Object","fromEntries","entries","Boolean","expanded","setExpanded","handleExpansionToggle","event","pairIndex","row","parent","parentRow","Tr","Td","expand","isExpanded","onToggle","renderParentRow","child","childRow","renderChildRow","CodeBlock","c_code_block__header_BorderBottomColor","global_palette_white","CodeBlockCode","JSON","stringify","JobResultsDetails","taskSlug","report_json","replace","rows","sort","a","b","aSeverity","bSeverity","sortBySeverity","forEach","push","buildResultsRows","report","Table","variant","Tbody","ParameterDetails","parameters","length","Flex","FlexItem","TextContent","Text","TextVariants","parameter","id","useParams","LOADING_INFO_PANEL","completedTaskDetails","setCompletedTaskDetails","LOADING_JOBS_TABLE","completedTaskJobs","setCompletedTaskJobs","tableLoading","setTableLoading","setError","runTaskModalOpened","setRunTaskModalOpened","selectedSystems","setSelectedSystems","isDeleteCancelModalOpened","setIsDeleteCancelModalOpened","isDelete","setIsDelete","isCancel","setIsCancel","lastUpdated","setLastUpdated","isRunning","setIsRunning","usePermissions","hasAccess","isLoading","navigate","useInsightsNavigate","fetchData","moment","format","fetchTask","fetchedTaskDetails","keys","fetchTaskJobs","fetchedTaskJobs","some","useInterval","useEffect","updateDocumentTitle","getSelectedSystems","JobResultsRow","useMemo","task_slug","isConversionTask","RunTaskModal","description","task_description","isOpen","setModalOpened","slug","filterMessage","task_filter_message","DeleteCancelTaskModal","startTime","start_time","EmptyStateDisplay","ExclamationCircleIcon","TASK_ERROR","response","PageHeader","Breadcrumb","ouiaId","isActive","columnGap","default","direction","md","flex","PageHeaderTitle","task_title","FlexibleFlex","data","flexContents","COMPLETED_INFO_BUTTONS","flexProps","COMPLETED_INFO_BUTTONS_FLEX_PROPS","Card","justifyContent","COMPLETED_INFO_PANEL","COMPLETED_INFO_PANEL_FLEX_PROPS","TasksTables","columns","filters","filterConfig","options","TASKS_TABLE_DEFAULTS","exportable","detailsComponent","hasDetails","undefined","emptyRows","isStickyHeader","isTableLoading","footerContent","RefreshFooterContent","NotAuthorized","serviceName"],"sourceRoot":""}