{"version":3,"file":"js/CompletedTaskDetails.1652812507569.eaf1d1349d5d9ccdcbe5.js","mappings":"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","sources":["webpack:///./src/SmartComponents/CompletedTaskDetails/Columns.js","webpack:///./src/SmartComponents/CompletedTaskDetails/CompletedTaskDetails.js","webpack:///./src/SmartComponents/CompletedTaskDetails/Filters.js","webpack:///./src/SmartComponents/CompletedTaskDetails/__tests__/__fixtures__/completedTasksDetails.fixtures.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { renderColumnComponent } from '../../Utilities/helpers';\n\nconst SystemNameCell = ({ /*id,*/ display_name }, index) => (\n  <Link\n    key={`system-title-${index}`}\n    //to={`/executed/${id}`}\n    to={`/`}\n  >\n    {display_name}\n  </Link>\n);\n\nSystemNameCell.propTypes = {\n  id: propTypes.string,\n  display_name: propTypes.string,\n};\n\nexport const SystemColumn = {\n  title: 'System name',\n  props: {\n    width: 35,\n  },\n  sortByProp: 'display_name',\n  renderExport: (job) => job.display_name,\n  renderFunc: renderColumnComponent(SystemNameCell),\n};\n\nexport const ResultColumn = {\n  title: 'Result',\n  props: {\n    width: 20,\n  },\n  sortByProp: 'status',\n  renderExport: (job) => job.status,\n};\n\nexport const MessageColumn = {\n  title: 'Message',\n  props: {\n    width: 20,\n  },\n  sortByProp: 'message',\n  renderExport: (job) => job.message,\n};\n\nexport const exportableColumns = [SystemColumn, ResultColumn, MessageColumn];\n\nexport default [SystemColumn, ResultColumn, MessageColumn];\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport TasksTables from '../../Utilities/hooks/useTableTools/Components/TasksTables';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  Flex,\n  FlexItem,\n} from '@patternfly/react-core';\nimport columns, { exportableColumns } from './Columns';\n//import { fetchExecutedTask, fetchExecutedTaskJobs } from '../../../api';\nimport { completedTaskJobsItems } from '../../Utilities/hooks/useTableTools/Components/__tests__/TasksTable.fixtures';\nimport * as Filters from './Filters';\nimport {\n  COMPLETED_INFO_PANEL,\n  COMPLETED_INFO_PANEL_FLEX_PROPS,\n  COMPLETED_INFO_BUTTONS,\n  COMPLETED_INFO_BUTTONS_FLEX_PROPS,\n  TASKS_TABLE_DEFAULTS,\n} from '../../constants';\nimport {\n  log4j_task,\n  upgrade_leap_task,\n} from './__tests__/__fixtures__/completedTasksDetails.fixtures';\nimport FlexibleFlex from '../../Utilities/hooks/useTableTools/Components/FlexibleFlex';\n\nconst CompletedTaskDetails = () => {\n  const { id } = useParams();\n  const filters = Object.values(Filters);\n  //const filters = Object.values(Filters);\n  const [completedTaskDetails, setCompletedTaskDetails] = useState([]);\n\n  useEffect(() => {\n    const fetchData = () => {\n      let taskDetails;\n      //const taskDetails = fetchExecutedTask(id);\n      //const taskJobs = fetchExecutedTaskJobs(id);\n      if (id == 1) {\n        taskDetails = log4j_task;\n      } else {\n        taskDetails = upgrade_leap_task;\n      }\n      taskDetails.messages_count = completedTaskJobsItems.filter((item) => {\n        return item.message !== 'No vulnerability found.';\n      }).length;\n\n      setCompletedTaskDetails(taskDetails);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <Breadcrumb ouiaId=\"completed-tasks-details-breadcrumb\">\n          <BreadcrumbItem to=\"/beta/insights/tasks/executed\">\n            Tasks\n          </BreadcrumbItem>\n          <BreadcrumbItem isActive>\n            {completedTaskDetails.task_title}\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <Flex direction={{ default: 'column', md: 'row' }}>\n          <Flex direction={{ default: 'column' }} flex={{ default: 'flex_1' }}>\n            <FlexItem>\n              <PageHeaderTitle title={completedTaskDetails.task_title} />\n            </FlexItem>\n            <FlexItem>{completedTaskDetails.description}</FlexItem>\n          </Flex>\n          <FlexibleFlex\n            data={completedTaskDetails}\n            flexContents={COMPLETED_INFO_BUTTONS}\n            flexProps={COMPLETED_INFO_BUTTONS_FLEX_PROPS}\n          />\n        </Flex>\n      </PageHeader>\n      <Main>\n        <Card>\n          <Flex\n            className=\"completed-task-details-info-border\"\n            justifyContent={{ default: 'justifyContentSpaceBetween' }}\n            direction={{ default: 'column', md: 'row' }}\n          >\n            <FlexibleFlex\n              data={completedTaskDetails}\n              flexContents={COMPLETED_INFO_PANEL}\n              flexProps={COMPLETED_INFO_PANEL_FLEX_PROPS}\n            />\n          </Flex>\n        </Card>\n        <br />\n        <Card>\n          <TasksTables\n            label={`${completedTaskDetails.id}-completed-jobs`}\n            ouiaId={`${completedTaskDetails.id}-completed-jobs-table`}\n            columns={columns}\n            items={completedTaskJobsItems}\n            filters={{\n              filterConfig: filters,\n            }}\n            options={{\n              ...TASKS_TABLE_DEFAULTS,\n              exportable: {\n                ...TASKS_TABLE_DEFAULTS.exportable,\n                columns: exportableColumns,\n              },\n            }}\n            //items={completedTasks}\n            //emptyRows={emptyRows}\n            isStickyHeader\n          />\n        </Card>\n      </Main>\n    </React.Fragment>\n  );\n};\n\nexport default CompletedTaskDetails;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const systemFilter = {\n  type: conditionalFilterType.text,\n  label: 'System',\n  filter: (jobs, value) =>\n    jobs.filter((job) =>\n      job.display_name.toLowerCase().includes(value.toLowerCase())\n    ),\n};\n","export const log4j_task = {\n  id: 42,\n  task_title: 'Log4J Detection',\n  description:\n    'Uses the insights-client to determine if systems are affected by the LogShell vulnerability. Resource intensive scan',\n  task_url: 'https://console.redhat.com/api/tasks/v1/task/log4J',\n  start: '2022-04-21T10:10:00',\n  end: null,\n  initiated_by: 'UserX',\n  status: 'running',\n  system_count: 10,\n  jobs: [\n    {\n      display_name: 'host01.example.com',\n      host_id: '00112233-4455-6677-8899aabbccddeeff',\n      status: 'completed',\n      //results: {'JSON structure'}\n    },\n  ],\n};\n\nexport const upgrade_leap_task = {\n  id: 43,\n  task_title: 'Upgrade RHEL version with LEAP tool',\n  description:\n    'Uses the insights-client to determine if RHEL version can be upgraded with LEAP tool. Resource intensive scan',\n  task_url: 'https://console.redhat.com/api/tasks/v1/task/leap',\n  start: '2022-04-21T10:10:00',\n  end: '2022-04-23T11:10:00',\n  initiated_by: 'Michael',\n  status: 'running',\n  system_count: 5,\n  jobs: [\n    {\n      display_name: 'host01.example.com',\n      host_id: '00112233-4455-6677-8899aabbccddeeff',\n      status: 'completed',\n      //results: {'JSON structure'}\n    },\n  ],\n};\n"],"names":["React","propTypes","Link","renderColumnComponent","SystemNameCell","index","display_name","id","string","SystemColumn","title","props","width","sortByProp","renderExport","job","renderFunc","ResultColumn","status","MessageColumn","message","exportableColumns","useState","useEffect","useParams","TasksTables","Main","PageHeader","PageHeaderTitle","Breadcrumb","BreadcrumbItem","Card","Flex","FlexItem","columns","completedTaskJobsItems","Filters","COMPLETED_INFO_PANEL","COMPLETED_INFO_PANEL_FLEX_PROPS","COMPLETED_INFO_BUTTONS","COMPLETED_INFO_BUTTONS_FLEX_PROPS","TASKS_TABLE_DEFAULTS","log4j_task","upgrade_leap_task","FlexibleFlex","CompletedTaskDetails","filters","Object","values","completedTaskDetails","setCompletedTaskDetails","fetchData","taskDetails","messages_count","filter","item","length","task_title","md","description","filterConfig","exportable","conditionalFilterType","systemFilter","type","text","label","jobs","value","toLowerCase","includes","task_url","start","end","initiated_by","system_count","host_id"],"sourceRoot":""}